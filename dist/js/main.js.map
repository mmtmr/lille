{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://lille/webpack/runtime/chunk loaded","webpack://lille/./public/calendar.css?307a","webpack://lille/./public/task.css?181b","webpack://lille/./public/fullbackground.css?ae05","webpack://lille/./public/login.css?7a21","webpack://lille/./public/dashboard.css?e5b3","webpack://lille/./src/hooks/useFetch.jsx","webpack://lille/./src/components/common/NavBar.jsx","webpack://lille/./src/routers/ProtectedRoute.jsx","webpack://lille/./src/components/common/WelcomeBar.jsx","webpack://lille/./src/routers/PublicRoute.jsx","webpack://lille/./src/components/common/DeleteConfirmationModal.jsx","webpack://lille/./src/components/dashboard/NewEventModal.jsx","webpack://lille/./src/components/calendar/Calendar.jsx","webpack://lille/./src/components/chart/BarChartForm.jsx","webpack://lille/./src/lib/color/ColourScheme.jsx","webpack://lille/./src/components/chart/BarChartGraph.jsx","webpack://lille/./src/components/chart/LineChartForm.jsx","webpack://lille/./src/components/chart/LineChartGraph.jsx","webpack://lille/./src/components/chart/ScatterChartForm.jsx","webpack://lille/./src/components/chart/ScatterChartGraph.jsx","webpack://lille/./src/components/chart/PieChartForm.jsx","webpack://lille/./src/components/chart/PieChartGraph.jsx","webpack://lille/./src/components/chart/BoxPlotForm.jsx","webpack://lille/./src/components/chart/BoxPlotGraph.jsx","webpack://lille/./src/components/chart/ChartPanel.jsx","webpack://lille/./src/lib/anki/anki.js","webpack://lille/./src/components/revision/NewRevisionModal.jsx","webpack://lille/./src/hooks/useTags.jsx","webpack://lille/./src/components/revision/RevisionList.jsx","webpack://lille/./src/components/task/NewTaskModal.jsx","webpack://lille/./src/components/task/NewSubTaskModal.jsx","webpack://lille/./src/components/task/TaskList.jsx","webpack://lille/./src/components/timelog/NewTimeLogModal.jsx","webpack://lille/./src/components/timelog/TimeLogList.jsx","webpack://lille/./src/components/access/Login.jsx","webpack://lille/./src/components/access/Register.jsx","webpack://lille/./public/school_ring.mp3","webpack://lille/./src/components/dashboard/CustomView.jsx","webpack://lille/./src/hooks/useAudio.jsx","webpack://lille/./src/components/dashboard/ConfirmationModal.jsx","webpack://lille/./src/components/dashboard/NotionBoard.jsx","webpack://lille/./src/components/dashboard/Dashboard.jsx","webpack://lille/./src/routers/AppRouter.jsx","webpack://lille/./src/App.jsx","webpack://lille/./src/main.jsx","webpack://lille/./public/calendar.css","webpack://lille/./public/dashboard.css","webpack://lille/./public/fullbackground.css","webpack://lille/./public/login.css","webpack://lille/./public/task.css","webpack://lille/webpack/bootstrap","webpack://lille/webpack/runtime/compat get default export","webpack://lille/webpack/runtime/define property getters","webpack://lille/webpack/runtime/global","webpack://lille/webpack/runtime/hasOwnProperty shorthand","webpack://lille/webpack/runtime/make namespace object","webpack://lille/webpack/runtime/node module decorator","webpack://lille/webpack/runtime/publicPath","webpack://lille/webpack/runtime/jsonp chunk loading","webpack://lille/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./calendar.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./calendar.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./task.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./task.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./fullbackground.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./fullbackground.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./login.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./login.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./dashboard.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./dashboard.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nexport const useFetch = (url) => {\r\n    const [task, setTask] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getTask = async () => {\r\n            try {\r\n                const response = await axios.get(url,{headers: { jwt_token: localStorage.token, rt_token: localStorage.refreshToken, user_id: localStorage.user_id }});\r\n                const data = await response?.data;\r\n                setTask(data);\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        };\r\n        getTask();\r\n    }, [url]);\r\n    return task;\r\n}","import React from \"react\";\r\nimport 'bootswatch/dist/vapor/bootstrap.css'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { toast } from \"react-toastify\";\r\nimport { useFetch } from '../../hooks/useFetch';\r\n\r\ntoast.configure();\r\nexport const NavBar = ({ setAuth }) => {\r\n    const handleLogout = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            localStorage.removeItem(\"token\");\r\n            localStorage.removeItem(\"refreshToken\");\r\n            localStorage.removeItem(\"user_id\");\r\n            setAuth(false);\r\n            toast.success(\"Logout successfully\");\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n    const userName=useFetch('/api/option/user_name');\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"./\">{userName}</Navbar.Brand>\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link href=\"./calendar\">Calendar</Nav.Link>\r\n                        {//TODO Add options\r\n                        /* <Nav.Link href=\"./revision\">Revision</Nav.Link>\r\n                        <NavDropdown title=\"Time Log\">\r\n                            <NavDropdown.Item href=\"./task\">Task</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"./timelog\">Time Log</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"./chart\">Chart</NavDropdown.Item>\r\n                        </NavDropdown> */}\r\n                    </Nav>\r\n                    <Form className=\"d-flex\">\r\n                        {/* <Nav.Link href=\"./Option\">Option</Nav.Link> */}\r\n                        <Button variant=\"outline-danger\" onClick={e => handleLogout(e)}>Logout</Button>\r\n                    </Form>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { NavBar } from '../components/common/NavBar';\r\n\r\nexport const ProtectedRoute = ({ component: Component, isAuthenticated, isLoading, setAuth, ...restOfProps }) => {\r\n    return (\r\n            <Route\r\n                {...restOfProps}\r\n                render={(props) => isAuthenticated ?\r\n                    <>\r\n                        <NavBar setAuth={setAuth} />\r\n                        <Component {...props} />\r\n                    </>\r\n                    : (isLoading ? 'Loading...' : <Redirect to=\"/login\" />)\r\n                }\r\n            />\r\n    );\r\n}","import React from \"react\";\r\nimport 'bootswatch/dist/vapor/bootstrap.css'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nexport const WelcomeBar = () => {\r\n    \r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand href=\"#\">Lille</Navbar.Brand>\r\n                    <Form className=\"d-flex\">\r\n                    <Link to=\"/register\">Sign Up</Link>&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Link to=\"/login\">Log In</Link>\r\n                    </Form>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { WelcomeBar } from '../components/common/WelcomeBar';\r\n\r\nexport const PublicRoute = ({ component: Component,isAuthenticated, isLoading, setAuth, ...restOfProps }) => {\r\n\r\n    return (\r\n        <Route\r\n            {...restOfProps}\r\n            render={(props) =>\r\n                !isAuthenticated ?\r\n                    <>\r\n                        <WelcomeBar />\r\n                        <Component {...props} setAuth={setAuth} />\r\n                    </>\r\n                    : (isLoading ? 'Loading...' : <Redirect to=\"/\" />)\r\n            }\r\n        />\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport 'bootswatch/dist/vapor/bootstrap.min.css'\r\n\r\nexport const DeleteConfirmationModal = ({ onConfirm, onCancel, targetName }) => {\r\n    const [name, setName] = useState(targetName === null ? \"this\" : targetName);\r\n    return (\r\n        <>\r\n            <Modal\r\n                backdrop=\"static\"\r\n                show={true}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Delete Confirmation</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    Are you sure you want to delete <b>{name}</b>?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => onConfirm()}\r\n                        id=\"confirmButton\">Confirm</Button>\r\n\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={onCancel}\r\n                        id=\"cancelButton\">Cancel</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport DateTimeRangePicker from '@wojtekmaj/react-datetimerange-picker'\r\nimport { DeleteConfirmationModal } from '../common/DeleteConfirmationModal';\r\n\r\nexport const NewEventModal = ({ onSave, onClose, schedule }) => {\r\n    const [name, setName] = useState(schedule.title);\r\n    const [subject, setSubject] = useState(schedule.subject);\r\n    const [location, setLocation] = useState(schedule.location);\r\n    const [description, setDescription] = useState(schedule.description);\r\n    const [del, setDel] = useState();\r\n    const [range, setRange] = useState([schedule.start, schedule.end]);\r\n    const [error, setError] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                backdrop=\"static\"\r\n                show={true}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Input Event</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            {\r\n                                name &&\r\n                                <InputGroup>\r\n                                    <InputGroup.Text>Event Name</InputGroup.Text>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter here\"\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n\r\n                            }\r\n                            {\r\n                                (subject || subject==\"\") &&\r\n                                <InputGroup>\r\n                                    <InputGroup.Text>Subject</InputGroup.Text>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter here\"\r\n                                        value={subject}\r\n                                        onChange={e => setSubject(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                            }\r\n                            {\r\n                                location &&\r\n                                <InputGroup>\r\n                                    <InputGroup.Text>Location</InputGroup.Text>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter here\"\r\n                                        value={location}\r\n                                        onChange={e => setLocation(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                            }\r\n                            <InputGroup>\r\n                                <InputGroup.Text>Description</InputGroup.Text>\r\n                                <Form.Control\r\n                                    type=\"textarea\"\r\n                                    placeholder=\"Enter here\"\r\n                                    rows={3}\r\n                                    value={description}\r\n                                    onChange={e => setDescription(e.target.value)}\r\n                                />\r\n                            </InputGroup>\r\n                            <br />\r\n                            <DateTimeRangePicker\r\n                                onChange={setRange}\r\n                                value={range}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {\r\n                        (subject || subject==\"\") &&\r\n                        !schedule.new&&\r\n                        <Button\r\n                            variant=\"danger\"\r\n                            onClick={() => { setDel(schedule) }}\r\n                            id=\"deleteButton\">Delete</Button>\r\n                    }\r\n                    {\r\n                        del &&\r\n                        < DeleteConfirmationModal\r\n                            onCancel={() => setDel(null)}\r\n                            onConfirm={() => {\r\n                                const we_id = schedule.id;\r\n                                const body = { we_id };\r\n                                const response = fetch(`/api/notionLog/${we_id}`, {\r\n                                    method: \"DELETE\",\r\n                                    headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                                    body: JSON.stringify(body)\r\n                                });\r\n                                setDel(null);\r\n                                onClose();\r\n                            }}\r\n                            targetName={schedule.title}\r\n                        />\r\n                    }\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            if (name && range) {\r\n                                if (!description) { setDescription(\"\"); }\r\n                                if (!subject) { setSubject(\"\"); }\r\n                                setError(false);\r\n                                onSave(name, description, subject, range[0], range[1]);\r\n                            }else if(location && range){\r\n                                if (!description) { setDescription(\"\"); }\r\n                                setError(false);\r\n                                onSave(new Date(range[0].getTime() - new Date().getTimezoneOffset() * 60000), new Date(range[1].getTime() - new Date().getTimezoneOffset() * 60000), description, location);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n                        }\r\n                        }\r\n                        id=\"saveButton\">Save</Button>\r\n\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={onClose}\r\n                        id=\"cancelButton\">Cancel</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};","import \"core-js/stable\";\r\nimport \"regenerator-runtime/runtime\";\r\nimport React, { useState, useEffect } from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport googleCalendarPlugin from '@fullcalendar/google-calendar'\r\nimport iCalendarPlugin from '@fullcalendar/icalendar'\r\nimport \"@fortawesome/fontawesome-free/css/all.css\"\r\nimport { Tooltip } from \"bootstrap/dist/js/bootstrap.esm.min.js\"\r\nimport { NewEventModal } from '../dashboard/NewEventModal';\r\nimport { useFetch } from '../../hooks/useFetch';\r\n\r\nexport const Calendar = () => {\r\n    const [event, setEvent] = useState();\r\n    // const googleCalendarApiKey = useFetch('/api/option/opt_google_api_key');\r\n    const handleEventClick = (clickInfo) => {\r\n        clickInfo.jsEvent.preventDefault();\r\n        // console.log(clickInfo.event);\r\n        if (clickInfo.event.url) {\r\n            if (confirm(`Are you sure you want to open new tab for the event '${clickInfo.event.title}'?`)) {\r\n                window.open(clickInfo.event.url);\r\n            }\r\n        } else if (clickInfo.event.extendedProps.lecturer) {\r\n            var schedule = { id: clickInfo.event._def.publicId, location: clickInfo.event.extendedProps.location, description: clickInfo.event.extendedProps.description, start: new Date(clickInfo.event._instance.range.start.getTime() + new Date().getTimezoneOffset() * 60000), end: new Date(clickInfo.event._instance.range.end.getTime() + new Date().getTimezoneOffset() * 60000) }\r\n            setEvent(schedule);\r\n        } else if (clickInfo.event.extendedProps.subject!=null) {\r\n            var schedule = { id: clickInfo.event._def.publicId, title: clickInfo.event.title, subject: clickInfo.event.extendedProps.subject, description: clickInfo.event.extendedProps.description, start: new Date(clickInfo.event._instance.range.start.getTime() + new Date().getTimezoneOffset() * 60000), end: new Date(clickInfo.event._instance.range.end.getTime() + new Date().getTimezoneOffset() * 60000) }\r\n            setEvent(schedule);\r\n        }\r\n\r\n    }\r\n    const generateTooltip = (info) => {\r\n        try {\r\n            const generateTooltipTitle = (info) => {\r\n                if (info.event.extendedProps.location && info.event.extendedProps.lecturer) {\r\n                    return '@' + String(info.event.extendedProps.location) + ' by ' + String(info.event.extendedProps.lecturer)\r\n\r\n                } else if (info.event.extendedProps.location) {\r\n                    return '@' + String(info.event.extendedProps.location)\r\n                } else { return String(info.event.title); }\r\n            }\r\n            var title = String(generateTooltipTitle(info));\r\n\r\n            var tooltip = new Tooltip(info.el, {\r\n                title: title,\r\n                placement: 'top',\r\n                trigger: 'hover',\r\n                container: 'body'\r\n            });\r\n        } catch (err) { console.log(err); }\r\n    }\r\n\r\n    const removeTooltip = (info) => {\r\n        try {\r\n            const tooltips = document.getElementsByClassName('tooltip');\r\n            while (tooltips.length > 0) {\r\n                tooltips[0].parentNode.removeChild(tooltips[0]);\r\n            }\r\n        } catch (err) { console.log(err); }\r\n    }\r\n\r\n    //TODO customized calendar\r\n    return (\r\n        <>\r\n            <FullCalendar\r\n\r\n                plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin, googleCalendarPlugin, iCalendarPlugin]}\r\n                headerToolbar={{\r\n                    left: 'title',\r\n                    center: 'dayGridMonth,timeGridWeek,timeGridDay',\r\n                    right: 'prev,next,today'\r\n                }}\r\n                initialView='dayGridMonth'\r\n                buttonText={{\r\n                    listYear: 'year',\r\n                    listMonth: 'month',\r\n                    listWeek: 'week',\r\n                    listDay: 'day'\r\n                }}\r\n                footerToolbar={{\r\n                    center: 'listYear,listMonth,listWeek,listDay'\r\n                }}\r\n                nowIndicator={true}\r\n                firstDay={1}\r\n                selectable={true}\r\n                selectMirror={true}\r\n                //select={this.handleDateSelect}\r\n                eventClick={handleEventClick}\r\n                //eventContent={renderEventContent}\r\n                weekNumbers={true}\r\n                weekNumberCalculation={calculateWeekNumber}\r\n                googleCalendarApiKey={'AIzaSyChhsubNQqDxtMQTFYNYTkaMvgnHI-Bgvo'}\r\n                eventContent={renderEventContent}\r\n                eventDidMount={generateTooltip}\r\n                eventWillUnmount={removeTooltip}\r\n                eventSources={[\r\n                    { googleCalendarId: 'en.malaysia#holiday@group.v.calendar.google.com' },//Malaysia Holiday\r\n                    //{ googleCalendarId: 'lily.meisim@gmail.com', color: 'red', textColor: 'pink' },\r\n                    { googleCalendarId: 'p520al5mfgqq5m2a8pu021nv0c@group.calendar.google.com', color: '#00B2A9', textColor: 'white', backgroundColor: '#00B2A9' }, //Liverpool\r\n                    //{ googleCalendarId: '4gekf3tjbnuji36gm85a9sicrbt56jv9@import.calendar.google.com', color: 'pink', textColor: 'deeppink' }, //Outlook calendar, probably ms.l, originally ics but cannot import so convert to google calendar\r\n                    //{ googleCalendarId: '13h4uict96okp7hnmnq0m28fisn8k15c@import.calendar.google.com', color: 'violet', textColor: 'blue' }, //moodle assignment submission deadline\r\n                    {\r\n                        url: 'https://stormy-bastion-22629.herokuapp.com/https://outlook.live.com/owa/calendar/f2e5756d-59ee-4c79-b36f-b2c5bf186115/f187ce75-ea44-4841-834b-9d7c21ee588b/cid-3B7E356350CB85DB/calendar.ics',\r\n                        format: 'ics',\r\n                        color: 'pink',\r\n                        textColor: 'deeppink'\r\n                    },//Microsoft\r\n                    {\r\n                        url: '/api/timetable',\r\n                        method: 'GET',\r\n                        beforeSend: function (xhr) {\r\n                            var headers = [{ \"Content-Type\": \"application/json\" }, { \"jwt_token\": localStorage.token }, { \"rt_token\": localStorage.refreshToken }, { \"user_id\": localStorage.user_id }];\r\n                            for (var i in headers) xhr.setRequestHeader(i, headers[i]);\r\n                        },\r\n                        extraParams: {\r\n                            user_id: localStorage.user_id\r\n                        },\r\n                        failure: function () {\r\n                            alert('there was an error while fetching events!');\r\n                        },\r\n                        color: 'mediumseagreen',   // a non-ajax option\r\n                    },\r\n                    {\r\n                        url: '/api/notionLog',\r\n                        method: 'GET',\r\n                        failure: function () {\r\n                            alert('there was an error while fetching events!');\r\n                        },\r\n                        color: 'red', textColor: 'pink', id: 'notion',\r\n                        extraParams: {\r\n                            user_id: localStorage.user_id\r\n                        },\r\n                    },\r\n                    {\r\n                        url: 'https://stormy-bastion-22629.herokuapp.com/https://lms2.apiit.edu.my/calendar/export_execute.php?userid=40338&authtoken=493c4503582bbf37a4df8ae70d9c07bd27d8d99e&preset_what=all&preset_time=recentupcoming',\r\n                        format: 'ics',\r\n                        color: 'violet',\r\n                        textColor: 'blue'\r\n                    }\r\n\r\n                ]}\r\n\r\n\r\n            />\r\n            {event && (event.subject||event.subject==\"\") &&\r\n                < NewEventModal\r\n                    onClose={() => { setEvent(null); }}\r\n                    onSave={async (we_title, we_desc, we_subject, we_start, we_end) => {\r\n                        try {\r\n                            const body = { we_title, we_desc, we_subject, we_start, we_end };\r\n                            const response = fetch(`/api/notionLog/${event.id}`, {\r\n                                method: \"PUT\",\r\n                                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken, \"user_id\": localStorage.user_id },\r\n                                body: JSON.stringify(body)\r\n                            });\r\n                            const status = await response?.status;\r\n                            if (status === 200) {\r\n                                toast.success(\"Event successfully modified!\")\r\n                            }\r\n                            setEvent(null);\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n\r\n                    schedule={event}\r\n                />\r\n            }\r\n            {event && event.location &&\r\n                < NewEventModal\r\n                    onClose={() => { setEvent(null); }}\r\n                    onSave={async (ce_start, ce_end, ce_desc, ce_location) => {\r\n                        try {\r\n                            const body = { ce_start, ce_end, ce_desc, ce_location };\r\n                            const response = fetch(`/api/timetable/${event.id}`, {\r\n                                method: \"PUT\",\r\n                                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken, \"user_id\": localStorage.user_id },\r\n                                body: JSON.stringify(body)\r\n                            });\r\n                            const status = await response?.status;\r\n                            if (status === 200) {\r\n                                toast.success(\"Class event successfully modified!\")\r\n\r\n                            }\r\n                            setEvent(null);\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n\r\n                    schedule={event}\r\n                />\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst calculateWeekNumber = (date) => {\r\n    let i = 0;\r\n    let currentTime = date.getTime();\r\n    //const firstAcademicDay = new Date(2021, 5, 7);\r\n    const firstAcademicTime = new Date(2021, 10, 8).getTime();\r\n    for (; currentTime >= firstAcademicTime; i++) {\r\n        currentTime = currentTime - 6.048e+8;\r\n    }\r\n    return i;\r\n}\r\n\r\n\r\n// const useTimetable = () => {\r\n//     function generateURL() {\r\n//         const d = new Date(2021, 5, 14);\r\n//         const oneMonthFromToday = new Date().setDate(new Date().getDate() + 28);\r\n//         const today = new Date();\r\n//         var weeks = [];\r\n//         for (let i = d; i <= oneMonthFromToday; i.setDate(i.getDate() + 7)) {\r\n//             var monday = i;\r\n//             //var monday = new Date(2021, 5, 14);\r\n//             //monday.setDate(monday.getDate() + 7);\r\n//             let day = monday.getDay();\r\n//             if (day !== 1)\r\n//                 monday.setHours(-24 * (day - 1));\r\n//             monday.toISOString().slice(0, 10);\r\n//             var urlMonth = String(monday.getMonth() + 1).padStart(2, '0');\r\n//             var urlDay = String(monday.getDate()).padStart(2, '0');\r\n//             var urlYear = monday.getFullYear();\r\n//             var urlDate = urlYear + '-' + urlMonth + '-' + urlDay;\r\n//             var url = \"\";\r\n//             url = '/api/apuCourse/' + urlDate;\r\n//             weeks.push(url);\r\n//         }\r\n//         return weeks;\r\n//     }\r\n\r\n//     //TODA save all events in json or php whatever in the server\r\n//     async function generateTimetable() {\r\n//         async function fetchWithTimeout(resource, options) {\r\n//             const { timeout = 6000 } = options;\r\n\r\n//             const controller = new AbortController();\r\n//             const id = setTimeout(() => controller.abort(), timeout);\r\n\r\n//             const response = await axios.post(resource,null, {\r\n//                 ...options,\r\n//                 signal: controller.signal,\r\n//                 headers: { jwt_token: localStorage.token, rt_token: localStorage.refreshToken } \r\n//             });\r\n//             clearTimeout(id);\r\n//             //console.log(\"whatever\");\r\n//             return response;\r\n//         }\r\n//         const urls = generateURL();\r\n\r\n//         const resultFilter = (result, error) => result.filter(i => i.status === (!error ? 'fulfilled' : 'rejected')).map(i => (!error ? i.value.config.url : i.reason));\r\n//         const result = await Promise.allSettled(urls.map(u => fetchWithTimeout(u, { timeout: 6000 })));\r\n//         const weeks = await resultFilter(result); // all fulfilled results\r\n//         //const rejected = await resultFilter(result, true); // all rejected results\r\n//         const data = await Promise.all(await weeks.map(week => axios.post(week,null, { headers: { jwt_token: localStorage.token, rt_token: localStorage.refreshToken } })));\r\n//         return data;\r\n//     }\r\n//     generateTimetable();\r\n//     console.log(\"success generating timetable\");\r\n// }\r\n\r\n\r\nconst renderEventContent = (eventInfo) => {\r\n    if (eventInfo.event.extendedProps.lecturer && eventInfo.view.type === 'dayGridMonth') {\r\n        return (\r\n            <>\r\n                <b>{eventInfo.timeText}</b> {eventInfo.event.extendedProps.course_code} ({eventInfo.event.extendedProps.course_type})\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChartBar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst OptionTheme = (theme) => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        neutral0: '#30115e',\r\n        neutral50: 'white',\r\n        neutral80: 'white',\r\n\r\n        neutral10: 'hotpink',\r\n        primary25: 'hotpink',\r\n        primary: '#32fbe2',\r\n    },\r\n})\r\n\r\nconst typeOptions = [\r\n    { value: \"total\", label: \"Total Duration\" },\r\n    { value: \"waiting\", label: \"Waiting Time\" },\r\n    { value: \"executing\", label: \"Executing Time\" }\r\n];\r\n\r\nexport const BarChartForm = ({ task, onSubmit }) => {\r\n    const [selectedTaskID, setSelectedTaskID] = useState([]);\r\n    const [selectedType, setSelectedType] = useState(\"\");\r\n    const [startDate, setStartDate] = useState(\"2021-10-01\");\r\n    const [endDate, setEndDate] = useState(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60000)).toISOString().split('T')[0]);\r\n    const [error, setError] = useState();\r\n\r\n    const handleTypeChange = (selected) => { setSelectedType(selected.value) };\r\n    const handleTaskChange = (selected) => { setSelectedTaskID(selected.map(t => Object.values(t)[0])); };\r\n\r\n    var taskOptions = [];\r\n    task.map((tsk) => {\r\n        taskOptions.push({ value: tsk.tsk_id, label: tsk.tsk_name })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <FontAwesomeIcon icon={faChartBar} />    <i>Generate a bar chart to compare tasks by their total time, waiting time, or executing time.</i>\r\n                <br />\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Select options={typeOptions} theme={OptionTheme} onChange={handleTypeChange} />\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <Form.Label>Start</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"StartDateInput\"\r\n                                value={startDate}\r\n                                onChange={e => setStartDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <Form.Label>End</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"EndDateInput\"\r\n                                value={endDate}\r\n                                onChange={e => setEndDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group>\r\n                    <Form.Label>Task(s)</Form.Label>\r\n                    <Select\r\n                        options={taskOptions}\r\n                        isMulti\r\n                        theme={OptionTheme}\r\n                        onChange={handleTaskChange}\r\n                    />\r\n                </Form.Group>\r\n                <br />\r\n                <br />\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                        onClick={() => {\r\n                            if (selectedType && selectedTaskID && startDate && endDate) {\r\n                                setError(false);\r\n                                onSubmit(selectedType, selectedTaskID, startDate, endDate);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n                        }\r\n                        }\r\n                        id=\"submitButton\">\r\n                        Generate\r\n                    </Button>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n            </Form>\r\n        </>\r\n\r\n    );\r\n\r\n};","//https://coolors.co/f72585-b5179e-7209b7-560bad-480ca8-3a0ca3-3f37c9-4361ee-4895ef-4cc9f0\r\n\r\nexport const colourSchemePinkBlue=['#F72585','#B5179E','#7209B7','#560BAD','#480CA8','#3A0CA3','#3F37C9','#4361EE','#4895EF','#4CC9F0'];\r\nexport const colourSchemeCandy=['#FFADAD','#FFD6A5','#FDFFB6','#CAFFBF','#9BF6FF','#A0C4FF','#BDB2FF','#FFC6FF','#FFFFFC'];\r\n\r\nexport default {colourSchemePinkBlue, colourSchemeCandy};","import React from 'react';\r\nimport { colourSchemePinkBlue } from '../../lib/color/ColourScheme';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport const BarChartGraph = ({ selectedTimeLog, selectedTask, selectedType }) => {\r\n    var datasets = [];\r\n\r\n    var datas = selectedTask.sort((a, b) => { return parseInt(a.tsk_id) - parseInt(b.tsk_id) }).map((tsk) => { return { tsk_id: tsk.tsk_id, tl_standby_mins: [], tl_real_mins: [] } });\r\n    var options = {};\r\n    const sortedTimeLog = selectedTimeLog.sort((a, b) => { return new Date(a.tl_date).getTime() - new Date(b.tl_date).getTime() }).sort((a, b) => { return parseInt(a.tsk_id) - parseInt(b.tsk_id) });\r\n    const sortedDate = sortedTimeLog.map((tl) => { return new Date(new Date(tl.tl_date).getTime() - (new Date(tl.tl_date).getTimezoneOffset() * 60000)).toISOString().split('T')[0] });\r\n    const labels = [...new Set(sortedDate)];\r\n    var tl = 0;\r\n    for (var data of datas) {\r\n        var i=0;\r\n        if (sortedDate[tl]!==labels[i]) {\r\n            data.tl_standby_mins.push(0);\r\n            data.tl_real_mins.push(0);\r\n            i++;\r\n        }\r\n        for (; tl < sortedTimeLog.length; tl++,i++) {\r\n            if (data.tsk_id !== sortedTimeLog[tl].tsk_id) {\r\n                break;\r\n            } else if (sortedDate[tl]!==labels[i]) {\r\n                data.tl_standby_mins.push(0);\r\n                data.tl_real_mins.push(0);\r\n                tl--;\r\n            } else {\r\n                data.tl_standby_mins.push(sortedTimeLog[tl].tl_standby_min);\r\n                data.tl_real_mins.push(sortedTimeLog[tl].tl_real_min);\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (selectedType) {\r\n        case \"total\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                datasets.push({\r\n                    label: selectedTask[i].tsk_name + \" Waiting Minutes\",\r\n                    data: datas[i].tl_standby_mins,\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                    stack: selectedTask[i].tsk_id\r\n                })\r\n                datasets.push({\r\n                    label: selectedTask[i].tsk_name + \" Executing Minutes\",\r\n                    data: datas[i].tl_real_mins,\r\n                    backgroundColor: 2 * i + 1 < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i + 1] : colourSchemePinkBlue[2 * i + 1 - colourSchemePinkBlue.length],\r\n                    stack: selectedTask[i].tsk_id\r\n                })\r\n            };\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Task Time Log Total Minutes'\r\n                    },\r\n                },\r\n                scales: {\r\n                    x: {\r\n                        stacked: true,\r\n                    },\r\n                    y: {\r\n                        stacked: true\r\n                    }\r\n                }\r\n            };\r\n            break;\r\n        case \"waiting\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                datasets.push({\r\n                    label: selectedTask[i].tsk_name,\r\n                    data: datas[i].tl_standby_mins,\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                })\r\n            };\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Task Time Log Waiting Minutes'\r\n                    },\r\n                },\r\n            };\r\n            break;\r\n        case \"executing\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                datasets.push({\r\n                    label: selectedTask[i].tsk_name,\r\n                    data: datas[i].tl_real_mins,\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                })\r\n            };\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Task Time Log Executing Minutes'\r\n                    },\r\n                },\r\n            };\r\n            break;\r\n    }\r\n\r\n    console.log(datasets);\r\n\r\n    return (\r\n        <Bar data={{ labels: labels, datasets: datasets }} options={options} />\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChartLine } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst OptionTheme = (theme) => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        neutral0: '#30115e',\r\n        neutral50: 'white',\r\n        neutral80: 'white',\r\n\r\n        neutral10: 'hotpink',\r\n        primary25: 'hotpink',\r\n        primary: '#32fbe2',\r\n    },\r\n})\r\n\r\nconst typeOptions = [\r\n    { value: \"total\", label: \"Total Duration\" },\r\n    { value: \"waiting\", label: \"Waiting Time\" },\r\n    { value: \"executing\", label: \"Executing Time\" }\r\n];\r\n\r\nexport const LineChartForm = ({ task, onSubmit }) => {\r\n    const [selectedTaskID, setSelectedTaskID] = useState();\r\n    const [selectedSubtaskID, setSelectedSubtaskID] = useState([]);\r\n    const [selectedType, setSelectedType] = useState(\"\");\r\n    const [subtaskOpt, setSubtaskOpt] = useState([]);\r\n    const [startDate, setStartDate] = useState(\"2021-10-01\");\r\n    const [endDate, setEndDate] = useState(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60000)).toISOString().split('T')[0]);\r\n    const [error, setError] = useState();\r\n\r\n    const handleTypeChange = (selected) => { setSelectedType(selected.value); };\r\n    const handleTaskChange = (selected) => { setSelectedTaskID(selected.value); setSelectedSubtaskID([]);};\r\n\r\n    const handleSubtaskChange = (selected) => { setSelectedSubtaskID(selected.map(t => Object.values(t)[0])); };\r\n\r\n    var taskOptions = [];\r\n    task.map((tsk) => {\r\n        taskOptions.push({ value: tsk.tsk_id, label: tsk.tsk_name })\r\n    })\r\n\r\n    useEffect(() => {\r\n        try {\r\n            var subtaskOptions =[];\r\n            const tsk = task.find(tsk => { return tsk.tsk_id === selectedTaskID });\r\n            subtaskOptions.push({ value: 0, label: \"None\" });\r\n            tsk.subtask.map((st) => {\r\n                subtaskOptions.push({ value: st.st_id, label: st.st_name });\r\n            })\r\n            setSubtaskOpt(subtaskOptions);\r\n\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }, [selectedTaskID]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <FontAwesomeIcon icon={faChartLine} />    <i>Generate a line chart to compare subtasks of a task by the total time, waiting time, or executing time.</i>\r\n                <br />\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Select options={typeOptions} theme={OptionTheme} onChange={handleTypeChange} />\r\n                </Form.Group>\r\n                <br />\r\n\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <Form.Label>Task</Form.Label>\r\n                    <Select options={taskOptions} theme={OptionTheme} onChange={handleTaskChange} />\r\n                </Form.Group>\r\n               \r\n\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <Form.Label>Start</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"StartDateInput\"\r\n                                value={startDate}\r\n                                onChange={e => setStartDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <Form.Label>End</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"EndDateInput\"\r\n                                value={endDate}\r\n                                onChange={e => setEndDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group>\r\n                    <Form.Label>Task(s)</Form.Label>\r\n                    <Select\r\n                        value={selectedSubtaskID.map((ssid) => { return subtaskOpt.find(so => { return so.value === parseInt(ssid) }); })}\r\n                        options={subtaskOpt}\r\n                        isMulti\r\n                        theme={OptionTheme}\r\n                        onChange={handleSubtaskChange}\r\n                    />\r\n                </Form.Group>\r\n                <br />\r\n                <br />\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                        onClick={() => {\r\n                            if (selectedType && selectedTaskID && selectedSubtaskID && startDate && endDate) {\r\n                                setError(false);\r\n                                console.log(selectedType, selectedTaskID, selectedSubtaskID, startDate, endDate);\r\n                                onSubmit(selectedType, selectedTaskID, selectedSubtaskID, startDate, endDate);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n                        }\r\n                        }\r\n                        id=\"submitButton\">\r\n                        Generate\r\n                    </Button>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n            </Form>\r\n        </>\r\n\r\n    );\r\n\r\n};","import React from 'react';\r\nimport { colourSchemePinkBlue } from '../../lib/color/ColourScheme';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nexport const LineChartGraph = ({ selectedTimeLog, selectedSubtask, selectedType }) => {\r\n    var datasets = [];\r\n    var datas = selectedSubtask.map((st) => { return { st_id: st.st_id, tl_standby_mins: [], tl_real_mins: [] } });\r\n    var options = {};\r\n    const sortedTimeLog = selectedTimeLog.sort((a, b) => { return new Date(a.tl_date).getTime() - new Date(b.tl_date).getTime() });\r\n    const labels = sortedTimeLog.map((tl) => { return new Date(new Date(tl.tl_date).getTime() - (new Date(tl.tl_date).getTimezoneOffset() * 60000)).toISOString().split('T')[0] });\r\n\r\n    for (var tl of sortedTimeLog) {\r\n        for (var data of datas) {\r\n            if (data.st_id === 0 && tl.st_ids.length === 0) {\r\n                data.tl_standby_mins.push(tl.tl_standby_min);\r\n                data.tl_real_mins.push(tl.tl_real_min);\r\n            } else if (data.st_id === 0 && tl.st_ids.length !== 0) {\r\n                data.tl_standby_mins.push(null);\r\n                data.tl_real_mins.push(null);\r\n            } else if (data.st_id !== 0 && tl.st_ids.length === 0) {\r\n                data.tl_standby_mins.push(null);\r\n                data.tl_real_mins.push(null);\r\n            } else {\r\n                for (var st_id of tl.st_ids) {\r\n                    if (data.st_id === st_id) {\r\n                        data.tl_standby_mins.push(tl.tl_standby_min);\r\n                        data.tl_real_mins.push(tl.tl_real_min);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    console.log(datas);\r\n\r\n\r\n    switch (selectedType) {\r\n        case \"total\":\r\n            for (var i = 0; i < selectedSubtask.length; i++) {\r\n                datasets.push({\r\n                    label: selectedSubtask[i].st_name + \" Waiting Minutes\",\r\n                    data: datas[i].tl_standby_mins,\r\n                    borderColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length],\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                })\r\n                datasets.push({\r\n                    label: selectedSubtask[i].st_name + \" Executing Minutes\",\r\n                    data: datas[i].tl_real_mins,\r\n                    borderColor: 2 * i + 1 < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i + 1] : colourSchemePinkBlue[2 * i + 1 - colourSchemePinkBlue.length],\r\n                    backgroundColor: 2 * i + 1 < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i + 1] : colourSchemePinkBlue[2 * i + 1 - colourSchemePinkBlue.length],\r\n                })\r\n            };\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Subtask Time Log Total Minutes',\r\n                    }\r\n                },\r\n            };\r\n            break;\r\n        case \"waiting\":\r\n            for (var i = 0; i < selectedSubtask.length; i++) {\r\n                datasets.push({\r\n                    label: selectedSubtask[i].st_name,\r\n                    data: datas[i].tl_standby_mins,\r\n                    borderColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length],\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                })\r\n            };\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Subtask Time Log Waiting Minutes',\r\n                    }\r\n                },\r\n            };\r\n            break;\r\n        case \"executing\":\r\n            for (var i = 0; i < selectedSubtask.length; i++) {\r\n                datasets.push({\r\n                    label: selectedSubtask[i].st_name,\r\n                    data: datas[i].tl_real_mins,\r\n                    borderColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length],\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                })\r\n            };\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Subtask Time Log Executing Minutes',\r\n                    }\r\n                },\r\n            };\r\n            break;\r\n    }\r\n\r\n\r\n    return (\r\n        <Line data={{ labels: labels, datasets: datasets }} options={options} />\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChartArea } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst OptionTheme = (theme) => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        neutral0: '#30115e',\r\n        neutral50: 'white',\r\n        neutral80: 'white',\r\n\r\n        neutral10: 'hotpink',\r\n        primary25: 'hotpink',\r\n        primary: '#32fbe2',\r\n    },\r\n})\r\n\r\nconst typeOptions = [\r\n    { value: \"total\", label: \"Total Duration\" },\r\n    { value: \"waiting\", label: \"Waiting Time\" },\r\n    { value: \"executing\", label: \"Executing Time\" }\r\n];\r\n\r\nexport const ScatterChartForm = ({ task, onSubmit }) => {\r\n    const [selectedTaskID, setSelectedTaskID] = useState([]);\r\n    const [selectedType, setSelectedType] = useState(\"\");\r\n    const [startDate, setStartDate] = useState(\"2021-10-01\");\r\n    const [endDate, setEndDate] = useState(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60000)).toISOString().split('T')[0]);\r\n    const [error, setError] = useState();\r\n\r\n    const handleTypeChange = (selected) => { setSelectedType(selected.value) };\r\n    const handleTaskChange = (selected) => { setSelectedTaskID(selected.map(t => Object.values(t)[0])); };\r\n\r\n    var taskOptions = [];\r\n    task.map((tsk) => {\r\n        taskOptions.push({ value: tsk.tsk_id, label: tsk.tsk_name })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <FontAwesomeIcon icon={faChartArea} />    <i>Generate a scatter chart to compare tasks by their total time, waiting time, or executing time.</i>\r\n                <br />\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Select options={typeOptions} theme={OptionTheme} onChange={handleTypeChange} />\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <Form.Label>Start</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"StartDateInput\"\r\n                                value={startDate}\r\n                                onChange={e => setStartDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <Form.Label>End</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"EndDateInput\"\r\n                                value={endDate}\r\n                                onChange={e => setEndDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group>\r\n                    <Form.Label>Task(s)</Form.Label>\r\n                    <Select\r\n                        options={taskOptions}\r\n                        isMulti\r\n                        theme={OptionTheme}\r\n                        onChange={handleTaskChange}\r\n                    />\r\n                </Form.Group>\r\n                <br />\r\n                <br />\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                        onClick={() => {\r\n                            if (selectedType && selectedTaskID && startDate && endDate) {\r\n                                setError(false);\r\n                                onSubmit(selectedType, selectedTaskID, startDate, endDate);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n                        }\r\n                        }\r\n                        id=\"submitButton\">\r\n                        Generate\r\n                    </Button>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n            </Form>\r\n        </>\r\n\r\n    );\r\n\r\n};","import React from 'react';\r\nimport { colourSchemePinkBlue } from '../../lib/color/ColourScheme';\r\nimport { Scatter } from 'react-chartjs-2';\r\n\r\nexport const ScatterChartGraph = ({ selectedTimeLog, selectedTask, selectedType }) => {\r\n    var datasets = [];\r\n\r\n    var datas = selectedTask.map((tsk) => { return { tsk_id: tsk.tsk_id, tl_dates: [], tl_standby_mins: [], tl_real_mins: [] } });\r\n    var options = {};\r\n    const sortedTimeLog = selectedTimeLog.sort((a, b) => { return new Date(a.tl_date).getTime() - new Date(b.tl_date).getTime() });\r\n\r\n    for (var data of datas) {\r\n        for (var tl of sortedTimeLog) {\r\n            if (data.tsk_id === tl.tsk_id) {\r\n                data.tl_standby_mins.push(tl.tl_standby_min);\r\n                data.tl_real_mins.push(tl.tl_real_min);\r\n                data.tl_dates.push(new Date(new Date(tl.tl_date).getTime() - (new Date(tl.tl_date).getTimezoneOffset() * 60000)));\r\n            }\r\n        }\r\n    }\r\n\r\n    switch (selectedType) {\r\n        case \"total\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                var dataW = [];\r\n                var dataE = [];\r\n                for (var j = 0; j < datas[i].tl_dates.length; j++) {\r\n                    dataW.push({ x: datas[i].tl_dates[j], y: datas[i].tl_standby_mins[j] });\r\n                    dataE.push({ x: datas[i].tl_dates[j], y: datas[i].tl_real_mins[j] });\r\n                }\r\n\r\n                datasets.push({\r\n                    label: selectedTask[i].tsk_name + \" (Wait Min)\",\r\n                    data: dataW,\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                })\r\n                datasets.push({\r\n                    label: selectedTask[i].tsk_name + \" (Exe. Min)\",\r\n                    data: dataE,\r\n                    backgroundColor: 2 * i + 1 < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i + 1] : colourSchemePinkBlue[2 * i + 1 - colourSchemePinkBlue.length],\r\n                })\r\n            }\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Task Time Log Total Minutes'\r\n                    },\r\n                    tooltip: {\r\n                        callbacks: {\r\n                            label: function (context) {\r\n                                return new Date(new Date(context.parsed.x).getTime() - (new Date(context.parsed.x).getTimezoneOffset() * 60000)).toISOString().split(\"T\")[0]+\" \"+context.dataset.label.split(\" (\")[0] +\" (\"+context.parsed.y+\" \"+context.dataset.label.split(\" (\")[1];\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                scales: {\r\n                    x: {\r\n                        ticks: {\r\n                            callback: function (value) {\r\n                                return new Date(new Date(value).getTime() - (new Date(value).getTimezoneOffset() * 60000)).toISOString().split('T')[0];\r\n                            },\r\n                            stepSize: 86400000\r\n                        }\r\n                    },\r\n                }\r\n            };\r\n            break;\r\n        case \"waiting\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                var dataW = [];\r\n                for (var j = 0; j < datas[i].tl_dates.length; j++) {\r\n                    dataW.push({ x: datas[i].tl_dates[j], y: datas[i].tl_standby_mins[j] });\r\n                }\r\n                datasets.push({\r\n                    label: selectedTask[i].tsk_name,\r\n                    data: dataW,\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                })\r\n            };\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Task Time Log Waiting Minutes'\r\n                    },\r\n                    tooltip: {\r\n                        callbacks: {\r\n                            label: function (context) {\r\n                                return new Date(new Date(context.parsed.x).getTime() - (new Date(context.parsed.x).getTimezoneOffset() * 60000)).toISOString().split(\"T\")[0]+\" \"+context.dataset.label+\" (\"+context.parsed.y+\" mins)\" ;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                },\r\n                scales: {\r\n                    x: {\r\n                        ticks: {\r\n                            callback: function (value) {\r\n                                return new Date(new Date(value).getTime() - (new Date(value).getTimezoneOffset() * 60000)).toISOString().split('T')[0];\r\n                            },\r\n                            stepSize: 86400000\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            break;\r\n        case \"executing\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                var dataE = [];\r\n                for (var j = 0; j < datas[i].tl_dates.length; j++) {\r\n                    dataE.push({ x: datas[i].tl_dates[j], y: datas[i].tl_real_mins[j] });\r\n                }\r\n                datasets.push({\r\n                    label: selectedTask[i].tsk_name,\r\n                    data: dataE,\r\n                    backgroundColor: 2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], //Double the colour scheme options\r\n                })\r\n            };\r\n            options = {\r\n                plugins: {\r\n                    title: {\r\n                        display: true,\r\n                        text: 'Task Time Log Executing Minutes'\r\n                    },\r\n                    tooltip: {\r\n                        callbacks: {\r\n                            label: function (context) {\r\n                                return new Date(new Date(context.parsed.x).getTime() - (new Date(context.parsed.x).getTimezoneOffset() * 60000)).toISOString().split(\"T\")[0]+\" \"+context.dataset.label+\" (\"+context.parsed.y+\" mins)\" ;\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                scales: {\r\n                    x: {\r\n                        ticks: {\r\n                            callback: function (value) {\r\n                                return new Date(new Date(value).getTime() - (new Date(value).getTimezoneOffset() * 60000)).toISOString().split('T')[0];\r\n                            },\r\n                            stepSize: 86400000\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            break;\r\n\r\n    }\r\n\r\n    console.log(datasets);\r\n    return (\r\n        <Scatter data={{ datasets: datasets }} options={options} />\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChartPie } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nexport const PieChartForm = ({ onSubmit }) => {\r\n\r\n    const [date, setDate] = useState(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60000)).toISOString().split('T')[0]);\r\n    const [error, setError] = useState();\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <FontAwesomeIcon icon={faChartPie} />    <i>Generate a pie chart for an overview of the day.</i>\r\n                <br />\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <Form.Label>Start</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        id=\"DateInput\"\r\n                        value={date}\r\n                        onChange={e => setDate(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n                <br />\r\n                <br />\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                        onClick={() => {\r\n                            if (date) {\r\n                                setError(false);\r\n                                onSubmit(date);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n                        }\r\n                        }\r\n                        id=\"submitButton\">\r\n                        Generate\r\n                    </Button>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </Form>\r\n        </>\r\n\r\n    );\r\n\r\n};","import React, { useRef, useEffect } from 'react';\r\nimport { colourSchemePinkBlue } from '../../lib/color/ColourScheme';\r\nimport { Pie, Chart } from 'react-chartjs-2';\r\n\r\nexport const PieChartGraph = ({ selectedTimeLog }) => {\r\n\r\n    const chartRef = useRef(null);\r\n\r\n\r\n\r\n    var datasets = [];\r\n    var labels = [];\r\n    var datas = selectedTimeLog.map((tl) => { return { tsk_id: tl.tsk_id, tl_standby_min: tl.tl_standby_min, tl_real_min: tl.tl_real_min, tsk_name: tl.task.tsk_name, st_names: tl.subtask.map(st => { return st.st_name }).flat() } });\r\n\r\n    for (var i = 0; i < datas.length; i++) {\r\n        labels.push(datas[i].tsk_name + \" (Executing)\");\r\n        labels.push(datas[i].tsk_name + \" (Waiting)\");\r\n        datasets.push({\r\n            backgroundColor: [2 * i < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i] : colourSchemePinkBlue[2 * i - colourSchemePinkBlue.length], 2 * i + 1 < colourSchemePinkBlue.length ? colourSchemePinkBlue[2 * i + 1] : colourSchemePinkBlue[2 * i + 1 - colourSchemePinkBlue.length]],\r\n            data: [datas[i].tl_real_min, datas[i].tl_standby_min],\r\n            subtasks: [datas[i].st_names]\r\n        })\r\n    }\r\n\r\n    if (chartRef.current) {\r\n        if (chartRef.current.chart) {\r\n            console.log(chartRef.current.chart);\r\n            chartRef.current.chart.destroy();\r\n        }\r\n    }\r\n\r\n    //https://codesandbox.io/s/dazzling-flower-211p2?file=/src/MyChart.js\r\n    var options = {\r\n        plugins: {\r\n            legend: {\r\n                labels: {\r\n                    generateLabels: chart => {\r\n                        // Get the default label list\r\n                        const original = Chart.overrides.pie.plugins.legend.labels.generateLabels;\r\n                        const labelsOriginal = original.call(this, chart);\r\n\r\n                        // Build an array of colors used in the datasets of the chart\r\n                        var datasetColors = chart.data.datasets.map(function (e) {\r\n                            return e.backgroundColor;\r\n                        });\r\n                        datasetColors = datasetColors.flat();\r\n\r\n                        // Modify the color and hide state of each label\r\n                        labelsOriginal.forEach(label => {\r\n                            // There are twice as many labels as there are datasets. This converts the label index into the corresponding dataset index\r\n                            label.datasetIndex = (label.index - label.index % 2) / 2;\r\n\r\n                            // The hidden state must match the dataset's hidden state\r\n                            label.hidden = !chart.isDatasetVisible(label.datasetIndex);\r\n\r\n                            // Change the color to match the dataset\r\n                            label.fillStyle = datasetColors[label.index];\r\n                        });\r\n\r\n                        return labelsOriginal;\r\n                    }\r\n                },\r\n                onClick: (mouseEvent, legendItem, legend) => {\r\n                    // toggle the visibility of the dataset from what it currently is\r\n                    legend.chart.getDatasetMeta(\r\n                        legendItem.datasetIndex\r\n                    ).hidden = legend.chart.isDatasetVisible(legendItem.datasetIndex);\r\n                    legend.chart.update();\r\n                }\r\n\r\n            },\r\n            tooltip: {\r\n                callbacks: {\r\n                    label: (context) => {\r\n                        const labelIndex = (context.datasetIndex * 2) + context.dataIndex;\r\n                        const subtaskName = context.chart.data.datasets[context.datasetIndex].subtasks.join().replace(/,/g, \", \");;\r\n                        return subtaskName ? context.chart.data.labels[labelIndex] + \" w/ \" + subtaskName + \" : \" + context.formattedValue + \"min\" : context.chart.data.labels[labelIndex] + \" : \" + context.formattedValue + \"min\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Pie ref={chartRef} data={{ labels: labels, datasets: datasets }} options={options} redraw={true} />\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Select from 'react-select';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGripLinesVertical } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst OptionTheme = (theme) => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        neutral0: '#30115e',\r\n        neutral50: 'white',\r\n        neutral80: 'white',\r\n\r\n        neutral10: 'hotpink',\r\n        primary25: 'hotpink',\r\n        primary: '#32fbe2',\r\n    },\r\n})\r\n\r\nconst typeOptions = [\r\n    { value: \"total\", label: \"Total Duration\" },\r\n    { value: \"waiting\", label: \"Waiting Time\" },\r\n    { value: \"executing\", label: \"Executing Time\" }\r\n];\r\n\r\nexport const BoxPlotForm = ({ task, onSubmit }) => {\r\n    const [selectedTaskID, setSelectedTaskID] = useState([]);\r\n    const [selectedType, setSelectedType] = useState(\"\");\r\n    const [startDate, setStartDate] = useState(\"2021-10-01\");\r\n    const [endDate, setEndDate] = useState(new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60000)).toISOString().split('T')[0]);\r\n    const [error, setError] = useState();\r\n\r\n    const handleTypeChange = (selected) => { setSelectedType(selected.value) };\r\n    const handleTaskChange = (selected) => { setSelectedTaskID(selected.map(t => Object.values(t)[0])); };\r\n\r\n    var taskOptions = [];\r\n    task.map((tsk) => {\r\n        taskOptions.push({ value: tsk.tsk_id, label: tsk.tsk_name })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Form>\r\n                <FontAwesomeIcon icon={faGripLinesVertical} />    <i>Generate a box plot to compare tasks by their total time, waiting time, or executing time.</i>\r\n                <br />\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Select options={typeOptions} theme={OptionTheme} onChange={handleTypeChange} />\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group className={error ? 'error' : ''}>\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <Form.Label>Start</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"StartDateInput\"\r\n                                value={startDate}\r\n                                onChange={e => setStartDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <Form.Label>End</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"EndDateInput\"\r\n                                value={endDate}\r\n                                onChange={e => setEndDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Form.Group>\r\n                <br />\r\n                <Form.Group>\r\n                    <Form.Label>Task(s)</Form.Label>\r\n                    <Select\r\n                        options={taskOptions}\r\n                        isMulti\r\n                        theme={OptionTheme}\r\n                        onChange={handleTaskChange}\r\n                    />\r\n                </Form.Group>\r\n                <br />\r\n                <br />\r\n                <div className=\"d-grid gap-2\">\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        size=\"lg\"\r\n                        onClick={() => {\r\n                            if (selectedType && selectedTaskID && startDate && endDate) {\r\n                                setError(false);\r\n                                onSubmit(selectedType, selectedTaskID, startDate, endDate);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n                        }\r\n                        }\r\n                        id=\"submitButton\">\r\n                        Generate\r\n                    </Button>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n\r\n            </Form>\r\n        </>\r\n\r\n    );\r\n\r\n};","import React from 'react';\r\nimport { colourSchemePinkBlue } from '../../lib/color/ColourScheme';\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport const BoxPlotGraph = ({ selectedTimeLog, selectedTask, selectedType }) => {\r\n    var datasets = [];\r\n\r\n    var datas = selectedTask.map((tsk) => { return { tsk_id: tsk.tsk_id, tl_standby_mins: [], tl_real_mins: [] } });\r\n    var layout = {};\r\n\r\n    for (var tl of selectedTimeLog) {\r\n        for (var data of datas) {\r\n            if (data.tsk_id === tl.tsk_id) {\r\n                data.tl_standby_mins.push(tl.tl_standby_min);\r\n                data.tl_real_mins.push(tl.tl_real_min);\r\n\r\n            } else {\r\n                data.tl_standby_mins.push(0);\r\n                data.tl_real_mins.push(0);\r\n            }\r\n            console.log(data);\r\n        }\r\n    }\r\n\r\n    switch (selectedType) {\r\n        case \"total\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                datasets.push({\r\n                    name: selectedTask[i].tsk_name,\r\n                    x: [...datas[i].tl_standby_mins.map(d => { return \"Waiting\" }), ...datas[i].tl_real_mins.map(d => { return \"Executing\" })],\r\n                    y: [...datas[i].tl_standby_mins, ...datas[i].tl_real_mins],\r\n                    marker: { color: i < colourSchemePinkBlue.length ? colourSchemePinkBlue[i] : colourSchemePinkBlue[i - colourSchemePinkBlue.length]}, //Double the colour scheme layout\r\n                    boxpoints: 'all',\r\n                    jitter: 0.3,\r\n                    pointpos: -1.8,\r\n                    type: 'box'\r\n                })\r\n            };\r\n            layout = {\r\n                paper_bgcolor: 'rgba(0,0,0,0)',\r\n                plot_bgcolor: 'rgba(0,0,0,0)',\r\n                font:{color:'rgb(50, 251, 226)'},\r\n                title: 'Task Time Log Total Minutes',\r\n                yaxis: {\r\n                    zeroline: false\r\n                },\r\n               \r\n                boxmode: 'group'\r\n            };\r\n            break;\r\n        case \"waiting\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                datasets.push({\r\n                    name: selectedTask[i].tsk_name,\r\n                    y: datas[i].tl_standby_mins,\r\n                    marker: { color: i < colourSchemePinkBlue.length ? colourSchemePinkBlue[i] : colourSchemePinkBlue[i - colourSchemePinkBlue.length] }, //Double the colour scheme layout\r\n                    boxpoints: 'all',\r\n                    jitter: 0.3,\r\n                    pointpos: -1.8,\r\n                    type: 'box'\r\n                })\r\n            };\r\n            layout = {\r\n                paper_bgcolor: 'rgba(0,0,0,0)',\r\n                plot_bgcolor: 'rgba(0,0,0,0)',\r\n                font:{color:'rgb(50, 251, 226)'},\r\n                title: 'Task Time Log Waiting Minutes'\r\n            };\r\n            break;\r\n        case \"executing\":\r\n            for (var i = 0; i < selectedTask.length; i++) {\r\n                datasets.push({\r\n                    name: selectedTask[i].tsk_name,\r\n                    y: datas[i].tl_real_mins,\r\n                    marker: { color: i < colourSchemePinkBlue.length ? colourSchemePinkBlue[i] : colourSchemePinkBlue[i - colourSchemePinkBlue.length] }, //Double the colour scheme layout\r\n                    boxpoints: 'all',\r\n                    jitter: 0.3,\r\n                    pointpos: -1.8,\r\n                    type: 'box'\r\n                })\r\n            };\r\n            layout = {\r\n                paper_bgcolor: 'rgba(0,0,0,0)',\r\n                plot_bgcolor: 'rgba(0,0,0,0)',\r\n                font:{color:'rgb(50, 251, 226)'},\r\n                title: 'Task Time Log Executing Minutes'\r\n            };\r\n            break;\r\n    }\r\n\r\n\r\n    return (\r\n        <Plot data={datasets} layout={layout} />\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport { BarChartForm } from './BarChartForm';\r\nimport { BarChartGraph } from './BarChartGraph';\r\nimport { LineChartForm } from './LineChartForm';\r\nimport { LineChartGraph } from './LineChartGraph';\r\nimport { ScatterChartForm } from './ScatterChartForm';\r\nimport { ScatterChartGraph } from './ScatterChartGraph';\r\nimport { PieChartForm } from './PieChartForm';\r\nimport { PieChartGraph } from './PieChartGraph';\r\nimport { BoxPlotForm } from './BoxPlotForm';\r\nimport { BoxPlotGraph } from './BoxPlotGraph';\r\nimport { defaults } from 'react-chartjs-2';\r\n\r\ndefaults.aspectRatio = 1.5;\r\ndefaults.responsive = true;\r\n\r\nexport const ChartPanel = () => {\r\n    const [barChart, setBarChart] = useState(); //Compare Between Multiple Tasks\r\n    const [lineChart, setLineChart] = useState(); //Compare Between Multiple Subtask\r\n    const [scatterChart, setScatterChart] = useState(); //Task Over Time with no RegressionLine\r\n    const [pieChart, setPieChart] = useState(); //Daily Overview\r\n    const [boxPlot, setBoxPlot] = useState(); //Compare between Multiple Task or Multiple Subtask\r\n    const [heatMap, setHeatMap] = useState(); //Frequency of Subtask\r\n    const [selectedTask, setSelectedTask] = useState();\r\n    const [selectedSubtask, setSelectedSubtask] = useState();\r\n    const [selectedTimeLog, setSelectedTimeLog] = useState();\r\n\r\n    const log = useFetch(\"/api/timelog\");\r\n    const task = useFetch(\"/api/task\");\r\n\r\n    const handleSelect = () => { setSelectedTask(); setSelectedSubtask(); setSelectedTimeLog(); setBarChart(); setLineChart(); setScatterChart(); setPieChart(); setBoxPlot();};\r\n\r\n    useEffect(() => {\r\n        var chart=null;\r\n        if (barChart) {\r\n            chart = barChart;\r\n        } else if (scatterChart) {\r\n            chart = scatterChart;\r\n        } else if (boxPlot) {\r\n            chart = boxPlot;\r\n        }\r\n        if (chart) {\r\n            const filterTask = chart.tsk_ids.map((tsk_id) => { return task.find(tsk => { return tsk.tsk_id === parseInt(tsk_id) }); })\r\n            setSelectedTask(filterTask);\r\n            const filterTimeLog = chart.tsk_ids.map((tsk_id) => { return log.filter(tl => { return tl.tsk_id === parseInt(tsk_id) }); }).flat().filter((tl) => {\r\n                return new Date(new Date(tl.tl_date) - new Date(tl.tl_date).getTimezoneOffset() * 60000).getTime() >= new Date(new Date(chart.start) - new Date(chart.start).getTimezoneOffset() * 60000).getTime() &&\r\n                    new Date(new Date(tl.tl_date) - new Date(tl.tl_date).getTimezoneOffset() * 60000).getTime() <= new Date(new Date(chart.end) - new Date(chart.end).getTimezoneOffset() * 60000).getTime()\r\n            })\r\n            setSelectedTimeLog(filterTimeLog);\r\n        }\r\n    }, [barChart, scatterChart, boxPlot]);\r\n\r\n    useEffect(() => {\r\n        if (lineChart) {\r\n            const filterTask = task.find((tsk) => { return tsk.tsk_id === lineChart.tsk_id });\r\n            setSelectedTask(filterTask);\r\n\r\n            var filterSubtask = lineChart.st_ids.map((st_id) => { return filterTask.subtask.find(st => { return st.st_id === parseInt(st_id) }); }).filter(st => { return st !== undefined })\r\n\r\n            //var filterTimeLog = lineChart.st_ids.map((st_id) => { return log.filter(lg => { return lg.subtask.find(st => { return st.st_id === parseInt(st_id) }); }) }).flat().filter(tl => { return tl !== undefined }).filter((v,i,a)=>a.findIndex(t=>(t.st_id === v.st_id))===i)\r\n            var filterTimeLog=log.filter(lg=>{return lg.subtask.some(st=> lineChart.st_ids.includes(st.st_id))}).flat().filter(tl => { return tl !== undefined });\r\n\r\n            if (lineChart.st_ids.includes(0)) {\r\n                filterSubtask.push({ st_id: 0, st_name: \"None\" });\r\n                filterTimeLog.push(...log.filter(lg => { return lg.subtask.length === 0 && lg.tsk_id === lineChart.tsk_id }));\r\n            }\r\n\r\n            filterTimeLog = filterTimeLog.filter(tl => {\r\n                return new Date(new Date(tl.tl_date) - new Date(tl.tl_date).getTimezoneOffset() * 60000).getTime() >= new Date(new Date(lineChart.start) - new Date(lineChart.start).getTimezoneOffset() * 60000).getTime() &&\r\n                    new Date(new Date(tl.tl_date) - new Date(tl.tl_date).getTimezoneOffset() * 60000).getTime() <= new Date(new Date(lineChart.end) - new Date(lineChart.end).getTimezoneOffset() * 60000).getTime()\r\n            });\r\n\r\n            setSelectedSubtask(filterSubtask);\r\n            setSelectedTimeLog(filterTimeLog);\r\n\r\n        }\r\n\r\n    }, [lineChart]);\r\n\r\n    useEffect(() => {\r\n        if (pieChart) {\r\n            const filterTimeLog = log.filter(tl => { return new Date(new Date(tl.tl_date) - new Date(tl.tl_date).getTimezoneOffset() * 60000).toLocaleDateString() === new Date(new Date(pieChart.tl_date) - new Date(pieChart.tl_date).getTimezoneOffset() * 60000).toLocaleDateString() }).filter(tl => { return tl !== undefined })\r\n            setSelectedTimeLog(filterTimeLog);\r\n        }\r\n\r\n    }, [pieChart]);\r\n    return (\r\n        <>\r\n            <Container className=\"full-height\">\r\n                <Row>\r\n                    <Col xs={3}>\r\n                        <Tabs defaultActiveKey=\"bar\" onSelect={handleSelect}>\r\n                            <Tab eventKey=\"bar\" title=\"Bar\" >\r\n                                <BarChartForm\r\n                                    task={task}\r\n                                    onSubmit={(selectedType, selectedTaskID, startDate, endDate) => setBarChart({ type: selectedType, tsk_ids: selectedTaskID, start: startDate, end: endDate })} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"line\" title=\"Line\" >\r\n                                <LineChartForm\r\n                                    task={task}\r\n                                    onSubmit={(selectedType, selectedTaskID, selectedSubtaskID, startDate, endDate) => setLineChart({ type: selectedType, tsk_id: selectedTaskID, st_ids: selectedSubtaskID, start: startDate, end: endDate })} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"scatter\" title=\"Scatter\" >\r\n                                <ScatterChartForm\r\n                                    task={task}\r\n                                    onSubmit={(selectedType, selectedTaskID, startDate, endDate) => setScatterChart({ type: selectedType, tsk_ids: selectedTaskID, start: startDate, end: endDate })} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"pie\" title=\"Pie\" >\r\n                                <PieChartForm\r\n                                    onSubmit={(date) => setPieChart({ tl_date: date })} />\r\n                            </Tab>\r\n                            <Tab eventKey=\"box\" title=\"Box\" >\r\n                                <BoxPlotForm\r\n                                    task={task}\r\n                                    onSubmit={(selectedType, selectedTaskID, startDate, endDate) => setBoxPlot({ type: selectedType, tsk_ids: selectedTaskID, start: startDate, end: endDate })} />\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </Col>\r\n                    <Col xs={2} />\r\n                    <Col>\r\n                        <br />\r\n\r\n                        {\r\n                            barChart &&\r\n                            selectedTask &&\r\n                            selectedTimeLog &&\r\n                            <BarChartGraph\r\n                                selectedTimeLog={selectedTimeLog}\r\n                                selectedTask={selectedTask}\r\n                                selectedType={barChart.type}\r\n                            />\r\n                        }\r\n\r\n                        {\r\n                            lineChart &&\r\n                            selectedSubtask &&\r\n                            selectedTask &&\r\n                            selectedTimeLog &&\r\n                            <LineChartGraph\r\n                                selectedTimeLog={selectedTimeLog}\r\n                                selectedSubtask={selectedSubtask}\r\n                                selectedType={lineChart.type}\r\n                            />\r\n                        }\r\n\r\n\r\n                        {\r\n                            scatterChart &&\r\n                            selectedTask &&\r\n                            selectedTimeLog &&\r\n                            <ScatterChartGraph\r\n                                selectedTimeLog={selectedTimeLog}\r\n                                selectedTask={selectedTask}\r\n                                selectedType={scatterChart.type}\r\n                            />\r\n                        }\r\n                        {\r\n                            pieChart &&\r\n                            selectedTimeLog &&\r\n                            <PieChartGraph\r\n                                selectedTimeLog={selectedTimeLog}\r\n                            />\r\n                        }\r\n                        {\r\n                            boxPlot &&\r\n                            selectedTask &&\r\n                            selectedTimeLog &&\r\n                            <BoxPlotGraph\r\n                                selectedTimeLog={selectedTimeLog}\r\n                                selectedTask={selectedTask}\r\n                                selectedType={boxPlot.type}\r\n                            />\r\n                        }\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n    );\r\n\r\n};","//AnkiConnect\r\nexport const ankiInvoke = (action, version, params) => {\r\n    return new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.addEventListener('error', () => reject('failed to issue request'));\r\n        xhr.addEventListener('load', () => {\r\n            try {\r\n                const response = JSON.parse(xhr.responseText);\r\n                if (Object.getOwnPropertyNames(response).length != 2) {\r\n                    throw 'response has an unexpected number of fields';\r\n                }\r\n                if (!response.hasOwnProperty('error')) {\r\n                    throw 'response is missing required error field';\r\n                }\r\n                if (!response.hasOwnProperty('result')) {\r\n                    throw 'response is missing required result field';\r\n                }\r\n                if (response.error) {\r\n                    throw response.error;\r\n                }\r\n                resolve(response.result);\r\n            } catch (e) {\r\n                console.error(e);\r\n                reject(e);\r\n            }\r\n        });\r\n\r\n        // xhr.open('POST', 'http://127.0.0.1:8765');\r\n        xhr.open('POST', 'http://localhost:8765');\r\n        // xhr.setRequestHeader(\"Content-Type\", \"http://localhost\");\r\n        xhr.send(JSON.stringify({ action, version, params }));\r\n    });\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport { useTags } from '../../hooks/useTags';\r\n\r\nconst OptionTheme = (theme) => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        neutral0: '#30115e',\r\n        neutral50: 'white',\r\n        neutral80: 'white',\r\n\r\n        neutral10: 'hotpink',\r\n        primary25: 'hotpink',\r\n        primary: '#32fbe2',\r\n    },\r\n})\r\n\r\nexport const NewRevisionModal = ({ noteInfo, onSave, onClose }) => {\r\n    const [noteId, setNoteId] = useState(noteInfo === null ? 0 : noteInfo.noteId);\r\n    const [frontField, setFrontField] = useState(noteInfo === null ? \"\" : noteInfo.fields.Front.value);\r\n    const [backField, setBackField] = useState(noteInfo === null ? \"\" : noteInfo.fields.Back.value);\r\n    const [tags, setTags] = useState(noteInfo === null ? [] : noteInfo.tags);\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const oldTags = useState(noteInfo === null ? [] : noteInfo.tags);\r\n    const allTags = useTags();\r\n    const handleFrontFieldChange = e => setFrontField(e.target.value)\r\n    const handleBackFieldChange = e => setBackField(e.target.value)\r\n\r\n    const handleTagsChange = (selected) => { console.log(selected); setTags(selected.map(t => t.value)); };\r\n\r\n\r\n    const tagOptions = [];\r\n    allTags.map((tag) => {\r\n        tagOptions.push({ value: tag, label: tag })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={true}\r\n                onHide={onClose}\r\n                backdrop=\"static\">\r\n                <Modal.Header>\r\n                    <Modal.Title>Input Revision</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Form.Label>Front</Form.Label>\r\n                            <Form.Control\r\n                                id=\"RevisionFrontField\"\r\n                                value={frontField}\r\n                                onChange={handleFrontFieldChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Form.Label>Back</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                id=\"RevisionBackField\"\r\n                                value={backField}\r\n                                onChange={handleBackFieldChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Form.Label>Tags</Form.Label>\r\n                            <CreatableSelect\r\n                                options={tagOptions}\r\n                                isMulti\r\n                                value={tags.map((tag) => { return { value: tag, label: tag } })}\r\n                                theme={OptionTheme}\r\n                                onChange={handleTagsChange}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            if (frontField) {\r\n                                const params = {\r\n                                    note: {\r\n                                        \"id\": noteId,\r\n                                        \"deckName\": \"Lille\",\r\n                                        \"modelName\": \"Basic\",\r\n                                        \"fields\": {\r\n                                            \"Front\": frontField,\r\n                                            \"Back\": backField\r\n                                        },\r\n                                        \"options\": {\r\n                                            \"allowDuplicate\": false,\r\n                                            \"duplicateScope\": \"deck\",\r\n                                            \"duplicateScopeOptions\": {\r\n                                                \"deckName\": \"Lille\",\r\n                                                \"checkChildren\": false,\r\n                                                \"checkAllModels\": false\r\n                                            }\r\n                                        },\r\n                                        \"tags\": tags\r\n                                    }\r\n                                }\r\n\r\n                                setError(false);\r\n                                onSave(params);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n                        }\r\n                        }\r\n                        id=\"saveButton\">Save</Button>\r\n\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={onClose}\r\n                        id=\"cancelButton\">Cancel</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { ankiInvoke } from '../lib/anki/anki';\r\nexport const useTags = () => {\r\n    const [tags, setTags] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTags = async () => {\r\n            try {\r\n                const getTags = await ankiInvoke(\"getTags\", 6);\r\n                console.log(getTags);\r\n                setTags(getTags);\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        };\r\n        fetchTags();\r\n    }, []);\r\n    return tags;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nimport { DeleteConfirmationModal } from '../common/DeleteConfirmationModal';\r\nimport { NewRevisionModal } from './NewRevisionModal'\r\nimport 'bootswatch/dist/vapor/bootstrap.css'\r\nimport { ankiInvoke } from '../../lib/anki/anki';\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport 'react-tiny-fab/dist/styles.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faListAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\n\r\nexport const RevisionList = () => {\r\n    const [createRevision, setCreateRevision] = useState();\r\n    const [editRevision, setEditRevision] = useState();\r\n    const [deleteRevision, setDeleteRevision] = useState();\r\n    const [updateRevision, setUpdateRevision] = useState();\r\n    const [revision, setRevision] = useState([]);\r\n    const [dueRevision, setDueRevision] = useState([]);\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const getCards = async () => {\r\n                const findCardsInReview = await ankiInvoke(\"findCards\", 6, { query: \"deck:Review\" });\r\n                if (findCardsInReview) {\r\n                    const moveCardsToLille = await ankiInvoke(\"changeDeck\", 6, { cards: findCardsInReview, deck: \"Lille\" });\r\n                }\r\n                const findCardsInLille = await ankiInvoke(\"findCards\", 6, { query: \"deck:Lille\" });\r\n                const areDue = await ankiInvoke(\"areDue\", 6, { cards: findCardsInLille });\r\n                const cardsInfo = await ankiInvoke(\"cardsInfo\", 6, { cards: findCardsInLille });\r\n                const dueCards = [];\r\n                for (var i = 0; i < areDue.length; i++) {\r\n                    if (areDue[i]) {\r\n                        dueCards.push(cardsInfo[i]);\r\n                    }\r\n                }\r\n                setRevision(cardsInfo);\r\n                setDueRevision(dueCards)\r\n            }\r\n            getCards();\r\n            const getNotes = async () => {\r\n                const findNotes = await ankiInvoke(\"findNotes\", 6, { query: \"deck:Lille\" });\r\n                const notesInfo = await ankiInvoke(\"notesInfo\", 6, { notes: findNotes });\r\n                setNotes(notesInfo);\r\n            }\r\n            getNotes();\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }, [, createRevision, editRevision, deleteRevision, updateRevision]);\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const reviewCard = async () => {\r\n                const changeDeckBeforeReview = await ankiInvoke(\"changeDeck\", 6, { cards: [updateRevision.cardId], deck: \"Review\" });\r\n\r\n                const guiDeckReview = await ankiInvoke(\"guiDeckReview\", 6, { name: \"Review\" });\r\n                const guiShowAnswer = await ankiInvoke(\"guiShowAnswer\", 6);\r\n\r\n                switch (updateRevision.action) {\r\n                    case 'fail':\r\n                        const guiFailCard = await ankiInvoke(\"guiAnswerCard\", 6, { ease: 1 });\r\n                        break;\r\n                    case 'hard':\r\n                        const guiHardCard = await ankiInvoke(\"guiAnswerCard\", 6, { ease: 2 });\r\n                        break;\r\n                    case 'good':\r\n                        const guiGoodCard = await ankiInvoke(\"guiAnswerCard\", 6, { ease: 3 });\r\n                        break;\r\n                    case 'easy':\r\n                        const guiEasyCard = await ankiInvoke(\"guiAnswerCard\", 6, { ease: 4 });\r\n                        break;\r\n                    case 'suspend':\r\n                        const suspendCard = await ankiInvoke(\"suspend\", 6, { cards: updateRevision.cardId });\r\n                        if (!suspendCard) {\r\n                            const unsuspendCard = await ankiInvoke(\"unsuspend\", 6, { cards: updateRevision.cardId });\r\n                        }\r\n                        break;\r\n                }\r\n                const changeDeckAfterReview = await ankiInvoke(\"changeDeck\", 6, { cards: [updateRevision.cardId], deck: \"Lille\" });\r\n\r\n            }\r\n            if (updateRevision) {\r\n                reviewCard();\r\n                setUpdateRevision();\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }, [updateRevision]);\r\n\r\n    const modifyFormatter = (cell, row, rowIndex) => {\r\n        return (\r\n            <>\r\n                {/* <Button variant=\"secondary\" onClick={() => { setUpdateRevision({cardId:cell, action:'bury'}) }}>Bury</Button> */}\r\n                <Button variant=\"secondary\" onClick={() => { setUpdateRevision({ cardId: cell, action: 'suspend' }) }}>Suspend</Button>\r\n                <Button variant=\"primary\" onClick={() => { setEditRevision(cell) }}>Modify</Button>\r\n                <Button variant=\"danger\" onClick={() => { setDeleteRevision(cell) }}>Delete</Button>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    const reviewFormatter = (cell, row, rowIndex) => {\r\n        return (\r\n            <>\r\n\r\n                <Button variant=\"danger\" onClick={() => { setUpdateRevision({ cardId: cell, action: 'fail' }) }}>Fail</Button>\r\n                <Button variant=\"warning\" onClick={() => { setUpdateRevision({ cardId: cell, action: 'hard' }) }}>Hard</Button>\r\n                <Button variant=\"success\" onClick={() => { setUpdateRevision({ cardId: cell, action: 'good' }) }}>Good</Button>\r\n                <Button variant=\"light\" onClick={() => { setUpdateRevision({ cardId: cell, action: 'easy' }) }}>Easy</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const dueFormatter = (cell, row, rowIndex) => {\r\n        if (parseInt(cell) === 0) {\r\n            return \"Now\";\r\n        } else if (parseInt(cell) < 0) {\r\n            return parseInt(cell) / 60 + \" min\";\r\n        } else {\r\n            return new Date(cell*1000).toLocaleDateString(\"en-MY\");\r\n        }\r\n    }\r\n\r\n\r\n    const expandRow = {\r\n        renderer: (row, rowIndex) => (\r\n            <div>\r\n                {`${row.fields.Back.value}`}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const defaultSorted = [{\r\n        dataField: \"ord\",\r\n        order: \"asc\"\r\n    }];\r\n\r\n    const dueRevisionColumns = [\r\n        {\r\n            dataField: \"due\",\r\n            text: \"Due\",\r\n            sort: true,\r\n            formatter: dueFormatter\r\n        },\r\n        {\r\n            dataField: \"fields.Front.value\",\r\n            text: \"Title\"\r\n        },\r\n        {\r\n            dataField: \"cardId\",\r\n            text: \"\",\r\n            formatter: reviewFormatter\r\n        },\r\n        {\r\n            dataField: \"note\",\r\n            text: \"\",\r\n            formatter: modifyFormatter\r\n        }\r\n    ];\r\n\r\n    const allRevisionColumns = [\r\n        {\r\n            dataField: \"due\",\r\n            text: \"Due\",\r\n            sort: true,\r\n            formatter: dueFormatter\r\n        },\r\n        {\r\n            dataField: \"fields.Front.value\",\r\n            text: \"Title\"\r\n        },\r\n        {\r\n            dataField: \"note\",\r\n            text: \"\",\r\n            formatter: modifyFormatter\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"full-height\">\r\n                {\r\n                    !createRevision && !editRevision && !deleteRevision &&\r\n                    <Fab\r\n                        position={{ bottom: 5, right: 5 }}\r\n                        event=\"hover\"\r\n                        alwaysShowTitle={true}\r\n                        mainButtonStyles={{\r\n                            backgroundColor: \"#00b5ad\"\r\n                        }}\r\n                        icon=\"+\"\r\n                    >\r\n                        <Action\r\n                            style={{\r\n                                backgroundColor: \"#8e44ad\"\r\n                            }}\r\n                            onClick={() => setCreateRevision(true)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faListAlt} />\r\n                        </Action>\r\n\r\n                    </Fab>\r\n                }\r\n                <Tabs defaultActiveKey=\"due\">\r\n                    {\r\n                        dueRevision.length !== 0 &&\r\n                        <Tab eventKey=\"due\" title=\"Due\" >\r\n                            <BootstrapTable\r\n                                keyField=\"cardId\"\r\n                                data={dueRevision}\r\n                                columns={dueRevisionColumns}\r\n                                defaultSorted={defaultSorted}\r\n                                expandRow={expandRow}\r\n                            />\r\n                        </Tab>\r\n                    }\r\n                    {\r\n                        dueRevision.length === 0 &&\r\n                        <Tab eventKey=\"due\" title=\"Due\" >\r\n                            <Alert key=\"due\" variant=\"primary\">Currently, there are no cards to review.</Alert>\r\n                        </Tab>\r\n                    }\r\n\r\n                    <Tab eventKey=\"all\" title=\"All\" >\r\n                        <BootstrapTable\r\n                            keyField=\"cardId\"\r\n                            data={revision}\r\n                            columns={allRevisionColumns}\r\n                            defaultSorted={defaultSorted}\r\n                            expandRow={expandRow}\r\n                        />\r\n                    </Tab>\r\n                </Tabs>\r\n\r\n            </Container>\r\n            {\r\n                createRevision &&\r\n                <NewRevisionModal\r\n                    noteInfo={null}\r\n                    onSave={(params) => {\r\n                        try {\r\n                            const createNote = async () => {\r\n                                const addNote = await ankiInvoke(\"addNote\", 6, params);\r\n                                setCreateRevision(false);\r\n                            }\r\n                            createNote();\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n                    onClose={() => setCreateRevision(false)}\r\n                />\r\n            }\r\n            {\r\n                editRevision &&\r\n                <NewRevisionModal\r\n                    noteInfo={notes.find(n => { return n.noteId === editRevision; })}\r\n                    onSave={(params) => {\r\n                        try {\r\n                            const updateNote = async () => {\r\n                                const updateNoteFields = await ankiInvoke(\"updateNoteFields\", 6, params);\r\n                                setEditRevision(false);\r\n                            }\r\n                            updateNote();\r\n\r\n                            const updateTags = async () => {\r\n                                const oldTags = notes.find(n => { return n.noteId === editRevision; }).tags;\r\n                                const removeTags = await oldTags.map(tag => ankiInvoke(\"removeTags\", 6, { notes: [editRevision], tags: tag }));\r\n                                const addTags = await params.note.tags.map(tag => ankiInvoke(\"addTags\", 6, { notes: [editRevision], tags: tag }));\r\n                                setEditRevision(false);\r\n                            }\r\n                            updateTags();\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n                    onClose={() => setEditRevision(false)}\r\n                />\r\n            }\r\n            {\r\n                deleteRevision &&\r\n                < DeleteConfirmationModal\r\n                    onCancel={() => setDeleteRevision(null)}\r\n                    onConfirm={() => {\r\n                        try {\r\n                            const removeNote = async () => {\r\n                                const deleteNote = await ankiInvoke(\"deleteNotes\", 6, { notes: [deleteRevision] });\r\n                                setDeleteRevision(null);\r\n                            }\r\n                            removeNote();\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n                    targetName={deleteRevision.question}\r\n                />\r\n            }\r\n        </>\r\n\r\n    );\r\n\r\n};","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nexport const NewTaskModal = ({ onSave, onClose, taskInfo }) => {\r\n    const [name, setName] = useState(taskInfo.tsk_name);\r\n    const [hour, setHour] = useState(taskInfo.tsk_est_min ? Math.trunc(taskInfo.tsk_est_min / 60) : 0);\r\n    const [min, setMin] = useState(taskInfo.tsk_est_min ? taskInfo.tsk_est_min % 60 : 0);\r\n    const [type, setType] = useState(taskInfo.tsk_todo ? \"todo\" : \"habit\");\r\n    const [error, setError] = useState(false);\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={true}\r\n                onHide={onClose}\r\n                backdrop=\"static\">\r\n                <Modal.Header>\r\n                    <Modal.Title>Input Task</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <InputGroup>\r\n                                <InputGroup.Text>Task Name</InputGroup.Text>\r\n\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter here\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Row>\r\n                                <Col>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text>Hours</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            id=\"TaskEstHourInput\"\r\n                                            step=\"1\"\r\n                                            min='0'\r\n                                            className={error ? 'error' : ''}\r\n                                            value={hour}\r\n                                            placeholder=\"Hour\"\r\n                                            onChange={e => setHour(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text>Minutes</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            id=\"TaskEstMinInput\"\r\n                                            step=\"5\"\r\n                                            min='0'\r\n                                            max='59'\r\n                                            className={error ? 'error' : ''}\r\n                                            value={min}\r\n                                            placeholder=\"Minute\"\r\n                                            onChange={e => setMin(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form.Group>\r\n                        < br />\r\n                        <InputGroup>\r\n                            <InputGroup.Text>Type</InputGroup.Text>\r\n                            <Form.Control\r\n                                value={type}\r\n                                as=\"select\"\r\n                                onChange={e => setType(e.target.value)}\r\n                            >\r\n                                <option value=\"habit\">Habit</option>\r\n                                <option value=\"todo\">To Do</option>\r\n                            </Form.Control>\r\n                        </InputGroup>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            if (name) {\r\n                                setError(false);\r\n                                onSave(name, Number(parseInt(hour) * 60) + Number(parseInt(min)), type === \"todo\");\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n\r\n                        }\r\n                        }\r\n                        id=\"saveButton\">Save</Button>\r\n\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={onClose}\r\n                        id=\"cancelButton\">Cancel</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nexport const NewSubTaskModal = ({ onSave, onClose, subTaskInfo }) => {\r\n    const [name, setName] = useState(subTaskInfo.st_name);\r\n    const [error, setError] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                backdrop=\"static\"\r\n                show={true}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Input Subtask</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <InputGroup>\r\n                                <InputGroup.Text>Subtask Name</InputGroup.Text>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter here\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            if (name) {\r\n                                setError(false);\r\n                                onSave(name);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n                        }\r\n                        }\r\n                        id=\"saveButton\">Save</Button>\r\n\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={onClose}\r\n                        id=\"cancelButton\">Cancel</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Collapse from 'react-bootstrap/Collapse'\r\nimport axios from 'axios';\r\nimport { NewTaskModal } from './NewTaskModal';\r\nimport { NewSubTaskModal } from './NewSubTaskModal';\r\nimport { DeleteConfirmationModal } from '../common/DeleteConfirmationModal';\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport 'react-tiny-fab/dist/styles.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTasks, faEye } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nexport const TaskList = () => {\r\n    const [createTask, setCreateTask] = useState();\r\n    const [createSubTask, setCreateSubTask] = useState();\r\n    const [editTask, setEditTask] = useState();\r\n    const [editSubTask, setEditSubTask] = useState();\r\n    const [deleteTask, setDeleteTask] = useState();\r\n    const [deleteSubTask, setDeleteSubTask] = useState();\r\n    const [task, setTask] = useState([]);\r\n\r\n    const [toggle, setToggle] = useState();\r\n    //const data = [{ tsk_id: \"001\", tsk_name: \"Shower\", tsk_est_min: \"20\", last5average: \"10\", improvement: \"5%\", subtask: [{ st_id: \"0001\", st_name: \"Exfoliate\", occurance: \"60%\" }, { st_id: \"0002\", st_name: \"Wash Hair\", occurance: \"40%\" }] }, { tsk_id: \"0002\", tsk_name: \"Night Routine\", tsk_est_min: \"15\", last5average: \"10\", improvement: \"7%\", subtask: [{ st_id: \"0003\", tsk_name: \"Brush Teeth\", occurance: \"100%\" }, { st_id: \"0004\", tsk_name: \"Skin Care\", occurance: \"100%\" }] }];\r\n\r\n    useEffect(() => {\r\n        const getTimeLog = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/task`,{headers: { jwt_token: localStorage.token, rt_token: localStorage.refreshToken }});\r\n                const data = await response?.data;\r\n                setTask(data);\r\n\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        };\r\n        getTimeLog();\r\n    }, [, createTask, createSubTask, editTask, editSubTask, deleteTask, deleteSubTask]);\r\n    return (\r\n        <>\r\n            <Container className=\"full-height\">\r\n                {\r\n                    !createTask && !createSubTask && !editTask && !editSubTask && !deleteTask && !deleteSubTask &&\r\n                    <Fab\r\n                        position={{ bottom: 5, right: 5 }}\r\n                        event=\"hover\"\r\n                        alwaysShowTitle={true}\r\n                        mainButtonStyles={{\r\n                            backgroundColor: \"#00b5ad\"\r\n                        }}\r\n                        icon=\"+\"\r\n                    >\r\n                        <Action\r\n                            style={{\r\n                                backgroundColor: \"#8e44ad\"\r\n                            }}\r\n                            onClick={() => setCreateTask(true)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faTasks} />\r\n                        </Action>\r\n\r\n                    </Fab>\r\n                }\r\n\r\n                <table class=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Task List</th>\r\n                            <th class=\"text-center\">Name</th>\r\n                            <th class=\"text-center\">Estimate Minutes</th>\r\n                            <th class=\"text-center\">Type</th>\r\n                            {/* <th class=\"text-center\">Average Minutes (Last 5)</th>\r\n                            <th class=\"text-center\">Improvement</th> */}\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {task.map((tsk, index) =>\r\n                            <>\r\n\r\n                                <tr>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-default btn-xs\"\r\n                                            onClick={() => setToggle(toggle === index ? null : index)}\r\n                                            aria-controls={index}\r\n                                            aria-expanded={toggle === index ? true : false}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faEye} />\r\n                                        </button>\r\n\r\n                                    </td>\r\n\r\n                                    <td class=\"text-center\">{tsk.tsk_name}</td>\r\n                                    <td class=\"text-center\">{tsk.tsk_est_min}</td>\r\n                                    <td class=\"text-center\">{tsk.tsk_todo ? \"To Do\" : \"Habit\"}</td>\r\n                                    {/* <td class=\"text-center\">{tsk.last5average}</td>\r\n                                    <td class=\"text-center\">{tsk.improvement}</td> */}\r\n                                    <td class=\"text-center\">\r\n                                        <Button variant=\"success\" onClick={() => { setCreateSubTask({ tsk_id: tsk.tsk_id, tsk_name: \"\", tsk_todo: tsk.tsk_todo }) }}>Add</Button>\r\n                                        <Button variant=\"primary\" onClick={() => { setEditTask({ tsk_id: tsk.tsk_id, tsk_name: tsk.tsk_name, tsk_est_min: tsk.tsk_est_min, tsk_todo: tsk.tsk_todo }) }}>Modify</Button>\r\n                                        <Button variant=\"danger\" onClick={() => setDeleteTask(tsk)}>Delete</Button>\r\n                                    </td>\r\n\r\n\r\n                                </tr>\r\n                                <Collapse in={toggle === index ? true : false}>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td colSpan=\"6\">\r\n                                            <table class=\"table table-striped\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th class=\"text-center\">Subtask</th>\r\n                                                        {/* <th class=\"text-center\">Occurance Rate</th> */}\r\n                                                    </tr>\r\n                                                </thead>\r\n\r\n\r\n                                                <tbody>\r\n                                                    {tsk.subtask.map((st) =>\r\n                                                        <Collapse in={toggle === index ? true : false}>\r\n                                                            <tr>\r\n\r\n                                                                <td class=\"text-center\">{st.st_name}</td>\r\n                                                                {/* <td class=\"text-center\">{st.occurance}</td> */}\r\n                                                                <td class=\"text-center\">\r\n                                                                    <Button variant=\"primary\" onClick={() => { setEditSubTask(true); setSubTaskInfo({ tsk_id: st.tsk_id, st_id: st.st_id, st_name: st.st_name }); }}>Modify</Button>\r\n                                                                    <Button variant=\"danger\" onClick={() => setDeleteSubTask(st)}>Delete</Button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </Collapse>\r\n                                                    )}\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </td>\r\n                                    </tr>\r\n                                </Collapse>\r\n                            </>\r\n\r\n\r\n                        )}\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n            </Container>\r\n            {\r\n                createTask &&\r\n                < NewTaskModal\r\n                    onClose={() => { setCreateTask(null); }}\r\n                    onSave={(tsk_name, tsk_est_min, tsk_todo) => {\r\n                        try {\r\n                            const body = { tsk_name, tsk_est_min, tsk_todo };\r\n                            const response = fetch(\"/api/task\", {\r\n                                method: \"POST\",\r\n                                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                                body: JSON.stringify(body)\r\n                            });\r\n                            setCreateTask(null);\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n                    taskInfo={createTask}\r\n                />\r\n            }\r\n            {\r\n                editTask &&\r\n                < NewTaskModal\r\n                    onClose={() => { setEditTask(null); }}\r\n                    onSave={(tsk_name, tsk_est_min, tsk_todo) => {\r\n                        try {\r\n                            const tsk_id = editTask.tsk_id;\r\n                            const body = { tsk_name, tsk_est_min, tsk_todo };\r\n                            const response = fetch(`/api/task/${tsk_id}`, {\r\n                                method: \"PUT\",\r\n                                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                                body: JSON.stringify(body)\r\n                            });\r\n                            setEditTask(null);\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n                    taskInfo={editTask}\r\n                />\r\n\r\n            }\r\n            {\r\n                deleteTask &&\r\n                < DeleteConfirmationModal\r\n                    onCancel={() => setDeleteTask(null)}\r\n                    onConfirm={() => {\r\n                        const tsk_id = deleteTask.tsk_id;\r\n                        const body = { tsk_id };\r\n                        const response = fetch(`/api/task/${tsk_id}`, {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                            body: JSON.stringify(body)\r\n                        });\r\n                        setDeleteTask(null);\r\n                    }}\r\n                    targetName={deleteTask.tsk_name}\r\n                />\r\n            }\r\n            {\r\n                createSubTask &&\r\n                < NewSubTaskModal\r\n                    onClose={() => { setCreateSubTask(null); }}\r\n                    onSave={(st_name) => {\r\n                        try {\r\n                            const tsk_id = createSubTask.tsk_id;\r\n                            const body = { st_name };\r\n                            const response = fetch(`/api/task/${tsk_id}`, {\r\n                                method: \"POST\",\r\n                                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                                body: JSON.stringify(body)\r\n                            });\r\n                            setCreateSubTask(null);\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n                    subTaskInfo={createSubTask}\r\n                />\r\n            }\r\n            {\r\n                editSubTask &&\r\n                < NewSubTaskModal\r\n                    onClose={() => { setEditSubTask(null); }}\r\n                    onSave={(st_name) => {\r\n                        const tsk_id = editSubTask.tsk_id;\r\n                        const st_id = editSubTask.st_id;\r\n                        const body = { st_name };\r\n                        const response = fetch(`/api/task/${tsk_id}/${st_id}`, {\r\n                            method: \"PUT\",\r\n                            headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                            body: JSON.stringify(body)\r\n                        });\r\n                        setEditSubTask(null);\r\n                    }}\r\n                    subTaskInfo={editSubTask}\r\n                />\r\n            }\r\n            {\r\n                deleteSubTask &&\r\n                < DeleteConfirmationModal\r\n                    onCancel={() => setDeleteSubTask(null)}\r\n                    onConfirm={() => {\r\n                        const tsk_id = deleteSubTask.tsk_id;\r\n                        const st_id = deleteSubTask.st_id;\r\n                        const body = { st_id };\r\n                        const response = fetch(`/api/task/${tsk_id}/${st_id}`, {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                            body: JSON.stringify(body)\r\n                        });\r\n                        setDeleteSubTask(null);\r\n                    }}\r\n                    targetName={deleteSubTask.tsk_name}\r\n                />\r\n            }\r\n\r\n\r\n        </>\r\n    );\r\n\r\n};","import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Select from 'react-select'\r\n\r\nconst OptionTheme = (theme) => ({\r\n    ...theme,\r\n    borderRadius: 0,\r\n    colors: {\r\n        ...theme.colors,\r\n        neutral0: '#30115e',\r\n        neutral50: 'white',\r\n        neutral80: 'white',\r\n\r\n        neutral10: 'hotpink',\r\n        primary25: 'hotpink',\r\n        primary: '#32fbe2',\r\n    },\r\n})\r\n\r\nexport const NewTimeLogModal = ({ task, timeLogInfo, onSave, onClose }) => {\r\n    //const timeLogInfo = { task:{tsk_name:\"Elaine's Website\"},tsk_id:\"1\", st_id:[\"1\",\"2\"]};\r\n    //const timeLogInfo={tsk_name:[\"Shower\"]};\r\n    const [taskID, setTaskID] = useState(timeLogInfo === null ? 0 : timeLogInfo.tsk_id);\r\n    const [subtaskOpt, setSubtaskOpt] = useState([{ value: \"N/A\", label: \"N/A\" }]);\r\n    const [selectedSubtaskID, setSelectedSubtaskID] = useState(timeLogInfo === null ? [] : timeLogInfo.st_ids);\r\n    const [standbyHour, setStandbyHour] = useState(timeLogInfo === null ? 0 : Math.trunc(timeLogInfo.tl_standby_min / 60));\r\n    const [standbyMin, setStandbyMin] = useState(timeLogInfo === null ? 0 : timeLogInfo.tl_standby_min % 60);\r\n    const [realHour, setRealHour] = useState(timeLogInfo === null ? 0 : Math.trunc(timeLogInfo.tl_real_min / 60));\r\n    const [realMin, setRealMin] = useState(timeLogInfo === null ? 0 : timeLogInfo.tl_real_min % 60);\r\n    const [date, setDate] = useState(timeLogInfo === null ? new Date(new Date().getTime() - (new Date().getTimezoneOffset() * 60000)).toISOString().split('T')[0] : new Date(new Date(timeLogInfo.tl_date).getTime() - (new Date(timeLogInfo.tl_date).getTimezoneOffset() * 60000)).toISOString().split('T')[0]); //Convert UTC Stored in Database to Local Time Zone\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleTaskChange = (selected) => { setTaskID(selected.value) };\r\n    const handleSubtaskChange = (selected) => { setSelectedSubtaskID(selected.map(st => Object.values(st)[0])); };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const tsk = task.find(tsk => { return tsk.tsk_id === taskID });\r\n\r\n            var subtaskOptions = [];\r\n            tsk.subtask.map((st) => {\r\n                subtaskOptions.push({ value: st.st_id, label: st.st_name })\r\n            })\r\n            setSubtaskOpt(subtaskOptions);\r\n            console.log(\"hi\");\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }, [taskID,]);\r\n\r\n\r\n\r\n    const taskOptions = [];\r\n    task.map((tsk) => {\r\n        taskOptions.push({ value: tsk.tsk_id, label: tsk.tsk_name })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                show={true}\r\n                onHide={onClose}\r\n                backdrop=\"static\">\r\n                <Modal.Header>\r\n                    <Modal.Title>Input Time Log</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Form.Label>Task</Form.Label>\r\n                            <Select value={taskOptions.find(to => { return to.value === parseInt(taskID) })} options={taskOptions} theme={OptionTheme} onChange={handleTaskChange} />\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Form.Label>Date</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                id=\"TimeLogDateInput\"\r\n                                value={date}\r\n                                onChange={e => setDate(e.target.value)}\r\n                            />\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Form.Label>Waiting</Form.Label>\r\n                            <div class=\"row\">\r\n                                <div class=\"col\">\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text>Hours</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            id=\"TimeLogStandbyHourInput\"\r\n                                            step=\"1\"\r\n                                            min='0'\r\n                                            className={error ? 'error' : ''}\r\n                                            value={standbyHour}\r\n                                            placeholder=\"Hour\"\r\n                                            onChange={e => setStandbyHour(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text>Minutes</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            id=\"TimeLogStandbyMinInput\"\r\n                                            step=\"5\"\r\n                                            min='0'\r\n                                            max='59'\r\n                                            className={error ? 'error' : ''}\r\n                                            value={standbyMin}\r\n                                            placeholder=\"Min\"\r\n                                            onChange={e => setStandbyMin(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Form.Label>Executing</Form.Label>\r\n                            <div class=\"row\">\r\n                                <div class=\"col\">\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text>Hours</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            id=\"TimeLogRealHourInput\"\r\n                                            step=\"1\"\r\n                                            min='0'\r\n                                            className={error ? 'error' : ''}\r\n                                            value={realHour}\r\n                                            placeholder=\"Hour\"\r\n                                            onChange={e => setRealHour(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <InputGroup>\r\n                                        <InputGroup.Text>Minutes</InputGroup.Text>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            id=\"TimeLogRealMinInput\"\r\n                                            step=\"5\"\r\n                                            min='0'\r\n                                            max='59'\r\n                                            className={error ? 'error' : ''}\r\n                                            value={realMin}\r\n                                            placeholder=\"Min\"\r\n                                            onChange={e => setRealMin(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </div>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <br />\r\n                        <Form.Group className={error ? 'error' : ''}>\r\n                            <Form.Label>Subtask</Form.Label>\r\n                            <Select\r\n                                options={subtaskOpt}\r\n                                isMulti\r\n                                value={selectedSubtaskID.map((ssid) => { return subtaskOpt.find(so => { return so.value === parseInt(ssid) }); })}\r\n                                theme={OptionTheme}\r\n                                onChange={handleSubtaskChange}\r\n                            />\r\n\r\n                        </Form.Group>\r\n\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        onClick={() => {\r\n                            if (taskID && date) {\r\n                                standbyHour ? setStandbyHour(standbyHour) : setStandbyHour(0);\r\n                                standbyMin ? setStandbyMin(standbyMin) : setStandbyMin(0);\r\n                                realHour ? setRealHour(realHour) : setRealHour(0);\r\n                                realMin ? setRealMin(realMin) : setRealMin(0);\r\n                                setError(false);\r\n                                onSave(taskID, date, Number(parseInt(standbyHour) * 60) + parseInt(standbyMin), Number(parseInt(realHour) * 60) + parseInt(realMin), selectedSubtaskID);\r\n                            } else {\r\n                                setError(true);\r\n                            }\r\n\r\n                        }\r\n                        }\r\n                        id=\"saveButton\">Save</Button>\r\n\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={onClose}\r\n                        id=\"cancelButton\">Cancel</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Button from 'react-bootstrap/Button'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport axios from 'axios';\r\nimport { DeleteConfirmationModal } from '../common/DeleteConfirmationModal';\r\nimport { NewTimeLogModal } from './NewTimeLogModal'\r\nimport { useFetch } from '../../hooks/useFetch';\r\nimport { Fab, Action } from 'react-tiny-fab';\r\nimport 'react-tiny-fab/dist/styles.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const TimeLogList = () => {\r\n    const [createLog, setCreateLog] = useState();\r\n    const [editLog, setEditLog] = useState();\r\n    const [deleteLog, setDeleteLog] = useState();\r\n    const [log, setLog] = useState([]);\r\n    const task = useFetch(\"/api/task\");\r\n\r\n    useEffect(() => {\r\n        const getTimeLog = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/timelog`,{headers: { jwt_token: localStorage.token, rt_token: localStorage.refreshToken }});\r\n                const data = await response?.data;\r\n                setLog(data);\r\n\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        };\r\n        getTimeLog();\r\n    }, [, createLog, editLog, deleteLog]);\r\n\r\n    const buttonFormatter = (cell, row, rowIndex) => {\r\n        return (\r\n            <>\r\n                <Button variant=\"primary\" onClick={() => { setEditLog(cell) }}>Modify</Button>\r\n                <Button variant=\"danger\" onClick={() => { setDeleteLog(cell) }}>Delete</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const dateFormatter = (cell, row, rowIndex) => {\r\n        const realDate = new Date(cell).toLocaleDateString(\"en-MY\");\r\n        return realDate;\r\n    }\r\n\r\n    const defaultSorted = [{\r\n        dataField: \"tl_date\",\r\n        order: \"desc\"\r\n    }];\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"tl_id\",\r\n            text: \"ID\",\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: \"tl_date\",\r\n            text: \"Date\",\r\n            sort: true,\r\n            formatter: dateFormatter\r\n        },\r\n        {\r\n            dataField: \"task.tsk_name\",\r\n            text: \"Name\",\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"tl_standby_min\",\r\n            text: \"Waiting Time\"\r\n        },\r\n        {\r\n            dataField: \"tl_real_min\",\r\n            text: \"Execution Time\"\r\n        },\r\n        {\r\n            dataField: \"tl_id\",\r\n            text: \"\",\r\n            formatter: buttonFormatter\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Container className=\"full-height\">\r\n                {\r\n                    !editLog && !createLog && !deleteLog &&\r\n                    <Fab\r\n                        position={{ bottom: 5, right: 5 }}\r\n                        event=\"hover\"\r\n                        alwaysShowTitle={true}\r\n                        mainButtonStyles={{\r\n                            backgroundColor: \"#00b5ad\"\r\n                        }}\r\n                        icon=\"+\"\r\n                    >\r\n                        <Action\r\n                            style={{\r\n                                backgroundColor: \"#8e44ad\"\r\n                            }}\r\n                            onClick={() => setCreateLog(true)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faClock} />\r\n                        </Action>\r\n\r\n                    </Fab>\r\n                }\r\n                <BootstrapTable\r\n                    keyField=\"tl_id\"\r\n                    data={log}\r\n                    columns={columns}\r\n                    defaultSorted={defaultSorted}\r\n                />\r\n            </Container>\r\n            {\r\n                createLog &&\r\n                <NewTimeLogModal\r\n                    timeLogInfo={null}\r\n                    onSave={(tsk_id, tl_date, tl_standby_min, tl_real_min, st_ids) => {\r\n                        try {\r\n                            const body = { tl_date, tl_standby_min, tl_real_min, tsk_id, st_ids };\r\n                            const response = fetch(\"/api/timelog\", {\r\n                                method: \"POST\",\r\n                                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                                body: JSON.stringify(body)\r\n                            });\r\n                            setCreateLog(false);\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n                    onClose={() => setCreateLog(false)}\r\n                    task={task}\r\n                />\r\n            }\r\n            {\r\n                editLog &&\r\n                <NewTimeLogModal\r\n                    timeLogInfo={log.find(l => { return l.tl_id === editLog })}\r\n                    onSave={(tsk_id, tl_date, tl_standby_min, tl_real_min, st_ids) => {\r\n                        try {\r\n                            const body = { tl_date, tl_standby_min, tl_real_min, tsk_id, st_ids };\r\n                            const response = fetch(`/api/timelog/${editLog}`, {\r\n                                method: \"PUT\",\r\n                                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                                body: JSON.stringify(body)\r\n                            }).then(setEditLog(false));\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n                    onClose={() => setEditLog(false)}\r\n                    task={task}\r\n                />\r\n            }\r\n            {\r\n                deleteLog &&\r\n                < DeleteConfirmationModal\r\n                    onCancel={() => setDeleteLog(null)}\r\n                    onConfirm={() => {\r\n                        const body = { deleteLog };\r\n                        const response = fetch(`/api/timelog/${deleteLog}`, {\r\n                            method: \"DELETE\",\r\n                            headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken },\r\n                            body: JSON.stringify(body)\r\n                        });\r\n                        setDeleteLog(null);\r\n                    }}\r\n                    targetName={null}\r\n                />\r\n            }\r\n        </>\r\n\r\n    );\r\n\r\n};","import React, { useState } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const Login = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    user_email: \"\",\r\n    user_password: \"\",\r\n    remember_login: false\r\n  });\r\n\r\n  const { user_email, user_password, remember_login } = inputs;\r\n\r\n  const onChange = e =>\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n\r\n  const onSubmitForm = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { user_email, user_password };\r\n      const response = await fetch(\r\n        \"/auth/jwt/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(body)\r\n        }\r\n      );\r\n\r\n      const parseRes = await response.json();\r\n      if (parseRes.jwtToken && parseRes.rtToken) {\r\n        localStorage.setItem(\"token\", parseRes.jwtToken);\r\n        localStorage.setItem(\"user_id\",parseRes.user_id)\r\n        if(remember_login){\r\n          localStorage.setItem(\"refreshToken\", parseRes.rtToken);\r\n        }\r\n        setAuth(true);\r\n        toast.success(\"Login Successfully\");\r\n      } else {\r\n        setAuth(false);\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login\">\r\n        <Container className=\"full-height\">\r\n          <Form onSubmit={onSubmitForm}>\r\n\r\n            <Form.Group controlId=\"user_email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"user_email\"\r\n                value={user_email}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </Form.Group>\r\n            <br />\r\n            <Form.Group controlId=\"user_password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"user_password\"\r\n                value={user_password}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </Form.Group>\r\n            <br />\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              name=\"remember_login\"\r\n              label=\"Keep me log in for 3 months\"\r\n              onChange={e => onChange(e)}\r\n              />\r\n              <br />\r\n            <Button type=\"submit\" variant=\"success\">Login</Button>\r\n          </Form>\r\n          \r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const Register = ({ setAuth }) => {\r\n  const [inputs, setInputs] = useState({\r\n    user_email: \"\",\r\n    user_password: \"\",\r\n    user_name: \"\"\r\n  });\r\n\r\n  const { user_email, user_password, user_name } = inputs;\r\n\r\n  const onChange = e =>\r\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\r\n\r\n  const onSubmitForm = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { user_email, user_password, user_name };\r\n      const response = await fetch(\r\n        \"/auth/jwt/register\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(body)\r\n        }\r\n      );\r\n      const parseRes = await response.json();\r\n\r\n      if (parseRes.jwtToken) {\r\n        localStorage.setItem(\"token\", parseRes.jwtToken);\r\n        localStorage.setItem(\"userId\",parseRes.user_id)\r\n\r\n        setAuth(true);\r\n        toast.success(\"Register Successfully\");\r\n      } else {\r\n        setAuth(false);\r\n        toast.error(parseRes);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login\">\r\n        <Container className=\"full-height\">\r\n          <Form onSubmit={onSubmitForm}>\r\n          <Form.Group controlId=\"user_name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"user_name\"\r\n                value={user_name}\r\n                onChange={e => onChange(e)}\r\n                placeholder=\"Your Name\"\r\n              />\r\n            </Form.Group>\r\n            <br />\r\n            <Form.Group controlId=\"user_email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"user_email\"\r\n                value={user_email}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </Form.Group>\r\n            <br />\r\n            <Form.Group controlId=\"user_password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"user_password\"\r\n                value={user_password}\r\n                onChange={e => onChange(e)}\r\n              />\r\n            </Form.Group>\r\n            <br />\r\n\r\n            <Button type=\"submit\" variant=\"success\">Sign Up</Button>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};","export default __webpack_public_path__ + \"school_ring.mp3\";","import React, { useEffect, useState } from 'react';\r\nimport { sliceEvents, createPlugin } from '@fullcalendar/react';\r\nimport school_ring from '../../../public/school_ring.mp3';\r\nimport { useAudio } from '../../hooks/useAudio';\r\nimport { useFetch } from '../../hooks/useFetch'\r\n\r\nconst CustomView = (props) => {\r\n\r\n  const segs = sliceEvents(props, true); // allDay=true\r\n  const [ongoingEvent, setOngoingEvent] = useState([]);\r\n  const [upcomingEvent, setUpcomingEvent] = useState([]);\r\n  const [onTimer, setOnTimer] = useState(0);\r\n  const [upTimer, setUpTimer] = useState(0);\r\n  const [playing, toogle, keepPlaying] = useAudio(school_ring);\r\n\r\n  const timetableURL = useFetch(\"/api/option/opt_dashboard_image_url\");\r\n\r\n  useEffect(() => {\r\n    // if(ongoingEvent.length===0&&upcomingEvent.length===0) {document.body.style.backgroundImage = `url(${bedroom})`;}\r\n    document.body.style.backgroundImage = `url(${timetableURL})`;\r\n    const interval = setInterval(() => {\r\n      const onEvents = segs.filter(({ def }) => { return !def.allDay }).filter(({ range }) => { return (range.end.getTime() - (new Date().getTime() - range.end.getTimezoneOffset() * 60000)) >= 0 && (range.start.getTime() - (new Date().getTime() - range.start.getTimezoneOffset() * 60000)) <= 0 }).sort((a, b) => b.range.end.getTime() - a.range.end.getTime());\r\n      setOngoingEvent(onEvents);\r\n\r\n      const upEvents = segs.filter(({ def }) => { return !def.allDay }).filter(({ range }) => { return (range.end.getTime() - (new Date().getTime() - range.end.getTimezoneOffset() * 60000)) >= 0 && (range.start.getTime() - (new Date().getTime() - range.start.getTimezoneOffset() * 60000)) > 0 }).sort((a, b) => a.range.start.getTime() - b.range.start.getTime());\r\n      setUpcomingEvent(upEvents);\r\n\r\n      if (onEvents.length > 0) {\r\n        setOnTimer(onEvents[0].range.end.getTime() - (new Date().getTime() - onEvents[0].range.end.getTimezoneOffset() * 60000));\r\n      }\r\n      if (upEvents.length > 0) {\r\n        const countdown = upEvents[0].range.start.getTime() - (new Date().getTime() - upEvents[0].range.start.getTimezoneOffset() * 60000);\r\n        setUpTimer(countdown);\r\n        if (countdown <= 1800000 && countdown > 1790000) {\r\n          keepPlaying();\r\n        } else if (countdown <= 60000 && countdown > 50000) {\r\n          keepPlaying();\r\n        }\r\n      }\r\n    }, 10000);//refresh every 10 seconds\r\n\r\n\r\n    return () => clearInterval(interval);\r\n  }, [segs])\r\n  // getPosition = () => {\r\n  //   return new Promise(function (resolve, reject) {\r\n  //     navigator.geolocation.getCurrentPosition(resolve, reject);\r\n  //   });    \r\n  // }\r\n  return (\r\n    <>\r\n      {/* <h1>\r\n        {props.dateProfile.currentRange.start.toUTCString()}\r\n      </h1> */}\r\n      <div className=\"center display-4\">\r\n        {\r\n          ongoingEvent.length > 0 &&\r\n          ongoingEvent.map((eve, i) => {\r\n            if (i == 0) return eve.def.title;\r\n            else return \" \" + eve.def.title\r\n          }) + \" ongoing w/\" + Math.floor(onTimer / 60000) + \" min left\"\r\n        }\r\n        {\r\n          ongoingEvent.length > 0 &&\r\n          upcomingEvent.length > 0 &&\r\n          upTimer <= 1800000 &&\r\n          `\\n\\n` + upcomingEvent[0].def.title + \" upcoming in \" + Math.floor(upTimer / 60000) + \" min\"\r\n        }\r\n        {ongoingEvent.length === 0 && upcomingEvent.length > 0 && upcomingEvent[0].def.title + \" upcoming in \" + Math.floor(upTimer / 60000) + \" min\"}\r\n        {upcomingEvent.length === 0 && ongoingEvent.length === 0 && \"No more events for the day\"}\r\n      </div>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default createPlugin({\r\n  views: {\r\n    custom: CustomView\r\n  }\r\n});","import React, { useState, useEffect } from \"react\";\r\n\r\nexport const useAudio = url => {\r\n  const [audio] = useState(new Audio(url));\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  const toggle = () => setPlaying(!playing);\r\n  const keepPlaying = () => setPlaying(true);\r\n\r\n  useEffect(() => {\r\n      playing ? audio.play() : audio.pause();\r\n    },\r\n    [playing]\r\n  );\r\n\r\n  useEffect(() => {\r\n    audio.addEventListener('ended', () => setPlaying(false));\r\n    return () => {\r\n      audio.removeEventListener('ended', () => setPlaying(false));\r\n    };\r\n  }, []);\r\n\r\n  return [playing, toggle, keepPlaying];\r\n};","import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport 'bootswatch/dist/vapor/bootstrap.min.css'\r\n\r\nexport const ConfirmationModal = ({ onConfirm, onCancel, targetName }) => {\r\n    const [name, setName] = useState(targetName === null ? \"this\" : targetName);\r\n    return (\r\n        <>\r\n            <Modal\r\n                backdrop=\"static\"\r\n                show={true}>\r\n                <Modal.Header>\r\n                    <Modal.Title>Complete Task</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    Are you sure you want to complete <b>{name}</b>?\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        onClick={onConfirm}\r\n                        id=\"confirmButton\">Confirm</Button>\r\n\r\n\r\n                    <Button\r\n                        variant=\"secondary\"\r\n                        onClick={onCancel}\r\n                        id=\"cancelButton\">Cancel</Button>\r\n                </Modal.Footer>\r\n\r\n            </Modal>\r\n        </>\r\n    );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { toast } from \"react-toastify\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport axios from 'axios';\r\nimport 'react-tiny-fab/dist/styles.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NewEventModal } from './NewEventModal';\r\nimport { ConfirmationModal } from './ConfirmationModal';\r\n//import { GoogleAuth } from '../access/GoogleAuth'\r\nexport const NotionBoard = ({ refetchCal }) => {\r\n    const [list, setList] = useState([]);\r\n    const [schedule, setSchedule] = useState();\r\n    const [confirm, setConfirm] = useState();\r\n\r\n    // const [googleLogin, setGoogleLogin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/dashboard/notion`, { headers: { jwt_token: localStorage.token, rt_token: localStorage.refreshToken, user_id: localStorage.user_id } });\r\n                const data = await response?.data;\r\n                setList(data);\r\n\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        };\r\n        getList();\r\n    }, []);\r\n    // useEffect(() => {\r\n    //     const sendEvent = async () => {\r\n    //         try {\r\n    //             if (!event || googleLogin) return;\r\n    //             const response = await axios.post('/auth/google/event', event)\r\n    //             const status = await response?.status;\r\n\r\n    //             if (status === 200) {\r\n    //                 setEvent();\r\n    //                 toast.success(\"Event successfully added!\")\r\n    //                 refetchCal();\r\n\r\n    //             }\r\n\r\n    //         } catch (err) {\r\n    //             console.log(err);\r\n    //             setGoogleLogin(true);\r\n    //         }\r\n    //     };\r\n    //     sendEvent();\r\n    // }, [event]);\r\n\r\n    // useEffect(() => {\r\n    //     const verifyGoogle = async () => {\r\n    //         try {\r\n    //             if (!schedule) return;\r\n    //             const response = await axios.get('/auth/google/verify')\r\n    //             const status = await response?.status;\r\n    //             console.log(response);\r\n    //             if (status === 200) {\r\n    //                 return;\r\n    //             }\r\n    //             else {\r\n    //                 setGoogleLogin(true);\r\n    //             }\r\n\r\n    //         } catch (err) {\r\n    //             console.log(err);\r\n    //             setGoogleLogin(true);\r\n    //         }\r\n    //     };\r\n    //     verifyGoogle();\r\n    // }, [schedule]);\r\n\r\n    const rowStyle = (row, rowIndex) => {\r\n        if (!row.properties.Priority.select) return { color: 'rgb(27,162,246)', backgroundColor: 'rgba(26, 9, 51,0.3)' }\r\n        const priority = row.properties.Priority.select.name\r\n        if (priority === \"High\") return { color: 'rgb(228,76,85)', backgroundColor: 'rgba(26, 9, 51,0.3)' }\r\n        if (priority === \"Medium\") return { color: 'rgb(255,193,7)', backgroundColor: 'rgba(26, 9, 51,0.3)' }\r\n        if (priority === \"Low\") return { color: 'rgb(68,217,232)', backgroundColor: 'rgba(26, 9, 51,0.3)' }\r\n    }\r\n\r\n    const handleComplete = (id) => {\r\n        try {\r\n            console.log(id)\r\n            const body = { id };\r\n            const response = fetch(\"/api/dashboard/notion\", {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken, \"user_id\": localStorage.user_id },\r\n                body: JSON.stringify(body)\r\n            });\r\n            toast.success(\"Congratulations in completing task :D\");\r\n            setList(list.filter((l) => { return l.id !== id }));\r\n            console.log(list);\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n    const buttonFormatter = (cell, row, rowIndex) => {\r\n        const title = row.properties.Name.title[0].plain_text;\r\n        const subject = row.properties.Subject.select ? row.properties.Subject.select.name : \"\";\r\n        return (\r\n            <>\r\n                <Button variant=\"success\" onClick={() => { setConfirm([title, cell]) }}><FontAwesomeIcon icon={faCheck} /></Button>\r\n                <Button variant=\"info\" onClick={() => { setSchedule({ title: title, subject: subject, desc: \"\", start: new Date(), end: new Date(), new: true }) }}><FontAwesomeIcon icon={faClock} /></Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            dataField: \"id\",\r\n            text: \"ID\",\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: \"properties.Priority.select.name\",\r\n            text: \"Priority\",\r\n            hidden: true,\r\n            sort: true\r\n        },\r\n        {\r\n            dataField: \"properties.Name.title[0].plain_text\",\r\n            text: \"Title\",\r\n            sort: true,\r\n            headerStyle: { backgroundColor: 'var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3))', width: \"40%\" }\r\n        },\r\n        {\r\n            dataField: \"properties.Subject.select.name\",\r\n            text: \"Subject\",\r\n            sort: true,\r\n            headerStyle: { backgroundColor: 'var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3))', width: \"20%\" }\r\n\r\n        },\r\n        {\r\n            dataField: \"properties.Status.select.name\",\r\n            text: \"Status\",\r\n            sort: true,\r\n            headerStyle: { backgroundColor: 'var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3))', width: \"20%\" }\r\n\r\n        },\r\n        {\r\n            dataField: \"id\",\r\n            text: \"\",\r\n            formatter: buttonFormatter,\r\n            headerStyle: { backgroundColor: 'var(--fc-neutral-bg-color, rgba(208, 208, 208, 0.3))', width: \"20%\" }\r\n\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <BootstrapTable\r\n                keyField=\"id\"\r\n                data={list}\r\n                columns={columns}\r\n                rowStyle={rowStyle}\r\n                tabIndexCell={true}\r\n            />\r\n            {\r\n                schedule &&\r\n                < NewEventModal\r\n                    onClose={() => { setSchedule(null); }}\r\n                    onSave={async(we_title, we_desc, we_subject, we_start, we_end) => {\r\n                        try {\r\n                            const body = { we_title, we_desc, we_subject, we_start, we_end };\r\n                            const response = await fetch(`/api/notionLog`, {\r\n                                method: \"POST\",\r\n                                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken, \"user_id\": localStorage.user_id },\r\n                                body: JSON.stringify(body)\r\n                            });\r\n                            const status = await response?.status;\r\n                            if (status === 200) {\r\n                                toast.success(\"Event successfully added!\")\r\n                                refetchCal();\r\n                            }\r\n                            setSchedule(null);\r\n                        } catch (err) {\r\n                            console.log(err.message);\r\n                        }\r\n                    }}\r\n\r\n                    schedule={schedule}\r\n                />\r\n            }\r\n            {/* {\r\n                schedule &&\r\n                googleLogin &&\r\n                <GoogleAuth />\r\n            } */}\r\n            {\r\n                confirm &&\r\n                <ConfirmationModal\r\n                    targetName={confirm[0]}\r\n                    onCancel={() => setConfirm(null)}\r\n                    onConfirm={() => {\r\n                        handleComplete(confirm[1]);\r\n                        setConfirm(null);\r\n                    }} />\r\n            }\r\n        </>\r\n\r\n    );\r\n\r\n};","import React, { useRef, useState } from \"react\";\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport googleCalendarPlugin from '@fullcalendar/google-calendar'\r\nimport iCalendarPlugin from '@fullcalendar/icalendar'\r\nimport { Tooltip } from \"bootstrap/dist/js/bootstrap.esm.min.js\"\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport CustomViewPlugin from './CustomView';\r\nimport { NotionBoard } from './NotionBoard';\r\nimport { NewEventModal } from './NewEventModal';\r\nimport { useFetch } from '../../hooks/useFetch'\r\n\r\nexport const Dashboard = () => {\r\n\r\n  const [event, setEvent] = useState();\r\n  const calBoardRef = useRef();\r\n  const calCustomRef = useRef();\r\n\r\n\r\n  const handleEventClick = (clickInfo) => {\r\n    clickInfo.jsEvent.preventDefault();\r\n    console.log(clickInfo.event);\r\n    if (clickInfo.event.url) {\r\n      if (confirm(`Are you sure you want to open new tab for the event '${clickInfo.event.title}'?`)) {\r\n        window.open(clickInfo.event.url);\r\n      }\r\n    } else if (clickInfo.event.extendedProps.lecturer) {\r\n      var schedule = { id: clickInfo.event._def.publicId, location: clickInfo.event.extendedProps.location, description: clickInfo.event.extendedProps.description, start: new Date(clickInfo.event._instance.range.start.getTime() + new Date().getTimezoneOffset() * 60000), end: new Date(clickInfo.event._instance.range.end.getTime() + new Date().getTimezoneOffset() * 60000) }\r\n      setEvent(schedule);\r\n    } else if (clickInfo.event.extendedProps.subject!=null) {\r\n      var schedule = { id: clickInfo.event._def.publicId, title: clickInfo.event.title, subject: clickInfo.event.extendedProps.subject, description: clickInfo.event.extendedProps.description, start: new Date(clickInfo.event._instance.range.start.getTime() + new Date().getTimezoneOffset() * 60000), end: new Date(clickInfo.event._instance.range.end.getTime() + new Date().getTimezoneOffset() * 60000) }\r\n      setEvent(schedule);\r\n\r\n    }\r\n\r\n  }\r\n  const generateTooltip = (info) => {\r\n    try {\r\n\r\n      const generateTooltipTitle = (info) => {\r\n        if (info.event.extendedProps.location && info.event.extendedProps.lecturer) {\r\n          return '@' + String(info.event.extendedProps.location) + ' by ' + String(info.event.extendedProps.lecturer)\r\n\r\n        } else if (info.event.extendedProps.location) {\r\n          return '@' + String(info.event.extendedProps.location)\r\n        } else { return String(info.event.title); }\r\n      }\r\n      var title = String(generateTooltipTitle(info));\r\n      var tooltip = new Tooltip(info.el, {\r\n        title: title,\r\n        placement: 'top',\r\n        trigger: 'hover',\r\n        container: 'body'\r\n      });\r\n\r\n      info.el.style.backgroundColor = 'rgba(26, 9, 51,0.3)'\r\n      if (document.getElementsByClassName('fc-list-day')[0]) document.getElementsByClassName('fc-list-day')[0].classList.remove('fc-list-day');\r\n      if (document.getElementsByClassName('fc-list')[0]) document.getElementsByClassName('fc-list')[0].classList.remove('fc-list');\r\n    } catch (err) { console.log(err); }\r\n  }\r\n\r\n  const removeTooltip = (info) => {\r\n    try {\r\n      const tooltips = document.getElementsByClassName('tooltip');\r\n      while (tooltips.length > 0) {\r\n        tooltips[0].parentNode.removeChild(tooltips[0]);\r\n      }\r\n    } catch (err) { console.log(err); }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className=\"height-50\">\r\n          <FullCalendar\r\n            ref={calCustomRef}\r\n            plugins={[CustomViewPlugin, googleCalendarPlugin, iCalendarPlugin]}\r\n            initialView='custom'\r\n            headerToolbar={false}\r\n            googleCalendarApiKey={'AIzaSyChhsubNQqDxtMQTFYNYTkaMvgnHI-Bgvo'}\r\n            eventSources={[\r\n              //{ googleCalendarId: 'lily.meisim@gmail.com', color: 'red', textColor: 'pink', id: 'notion' },\r\n              { googleCalendarId: 'en.malaysia#holiday@group.v.calendar.google.com' },//Malaysia Holiday\r\n              { googleCalendarId: 'p520al5mfgqq5m2a8pu021nv0c@group.calendar.google.com', color: '#00B2A9', textColor: 'white', backgroundColor: '#00B2A9' }, //Liverpool\r\n              //{ googleCalendarId: '4gekf3tjbnuji36gm85a9sicrbt56jv9@import.calendar.google.com', color: 'pink', textColor: 'deeppink' }, //Outlook calendar, probably ms.l, originally ics but cannot import so convert to google calendar\r\n              //{ googleCalendarId: '13h4uict96okp7hnmnq0m28fisn8k15c@import.calendar.google.com', color: 'violet', textColor: 'blue' }, //moodle assignment submission deadline\r\n              {\r\n                url: 'https://stormy-bastion-22629.herokuapp.com/https://outlook.live.com/owa/calendar/f2e5756d-59ee-4c79-b36f-b2c5bf186115/f187ce75-ea44-4841-834b-9d7c21ee588b/cid-3B7E356350CB85DB/calendar.ics',\r\n                format: 'ics',\r\n                color: 'pink',\r\n                textColor: 'deeppink'\r\n              },//Microsoft\r\n              {\r\n                url: '/api/timetable',\r\n                method: 'GET',\r\n                failure: function () {\r\n                  alert('there was an error while fetching events!');\r\n                },\r\n                color: 'mediumseagreen',   // a non-ajax option\r\n                extraParams: {\r\n                  user_id: localStorage.user_id\r\n              },\r\n              },\r\n              {\r\n                url: '/api/notionLog',\r\n                method: 'GET',\r\n                failure: function () {\r\n                  alert('there was an error while fetching events!');\r\n                },\r\n                color: 'red', textColor: 'pink', id: 'notion',\r\n                extraParams: {\r\n                  user_id: localStorage.user_id\r\n              },\r\n              },\r\n              {\r\n                url: 'https://stormy-bastion-22629.herokuapp.com/https://lms2.apiit.edu.my/calendar/export_execute.php?userid=40338&authtoken=493c4503582bbf37a4df8ae70d9c07bd27d8d99e&preset_what=all&preset_time=recentupcoming',\r\n                format: 'ics',\r\n                color: 'violet',\r\n                textColor: 'blue'\r\n              }\r\n            ]}\r\n            height=\"50vh\"\r\n\r\n          />\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <FullCalendar\r\n              ref={calBoardRef}\r\n              plugins={[listPlugin, googleCalendarPlugin, iCalendarPlugin]}\r\n              initialView='listDay'\r\n              headerToolbar={false}\r\n              googleCalendarApiKey={'AIzaSyC3WkY3kzoBBWgYb_7dIrLe-JaBbN92nRM'}\r\n              eventDidMount={generateTooltip}\r\n              eventWillUnmount={removeTooltip}\r\n              eventClick={handleEventClick}\r\n              eventSources={[\r\n                //{ googleCalendarId: 'lily.meisim@gmail.com', color: 'red', textColor: 'pink', id: 'notion' },\r\n                { googleCalendarId: 'en.malaysia#holiday@group.v.calendar.google.com' },//Malaysia Holiday\r\n                { googleCalendarId: 'p520al5mfgqq5m2a8pu021nv0c@group.calendar.google.com', color: '#00B2A9', textColor: 'white', backgroundColor: '#00B2A9' }, //Liverpool\r\n                //{ googleCalendarId: '4gekf3tjbnuji36gm85a9sicrbt56jv9@import.calendar.google.com', color: 'pink', textColor: 'deeppink' }, //Outlook calendar, probably ms.l, originally ics but cannot import so convert to google calendar\r\n                //{ googleCalendarId: '13h4uict96okp7hnmnq0m28fisn8k15c@import.calendar.google.com', color: 'violet', textColor: 'blue' }, //moodle assignment submission deadline\r\n                {\r\n                  url: '/api/timetable',\r\n                  method: 'GET',\r\n                  failure: function () {\r\n                    alert('there was an error while fetching events!');\r\n                  },\r\n                  color: 'mediumseagreen',   // a non-ajax option\r\n                  extraParams: {\r\n                    user_id: localStorage.user_id\r\n                },\r\n                },\r\n                {\r\n                  url: 'https://stormy-bastion-22629.herokuapp.com/https://outlook.live.com/owa/calendar/f2e5756d-59ee-4c79-b36f-b2c5bf186115/f187ce75-ea44-4841-834b-9d7c21ee588b/cid-3B7E356350CB85DB/calendar.ics',\r\n                  format: 'ics',\r\n                  color: 'pink',\r\n                  textColor: 'deeppink'\r\n                },//Microsoft\r\n                {\r\n                  url: '/api/notionLog',\r\n                  method: 'GET',\r\n                  failure: function () {\r\n                    alert('there was an error while fetching events!');\r\n                  },\r\n                  color: 'red', textColor: 'pink', id: 'notion',\r\n                  extraParams: {\r\n                    user_id: localStorage.user_id\r\n                },\r\n                },\r\n                {\r\n                  url: 'https://stormy-bastion-22629.herokuapp.com/https://lms2.apiit.edu.my/calendar/export_execute.php?userid=40338&authtoken=493c4503582bbf37a4df8ae70d9c07bd27d8d99e&preset_what=all&preset_time=recentupcoming',\r\n                  format: 'ics',\r\n                  color: 'violet',\r\n                  textColor: 'blue'\r\n                }\r\n\r\n              ]}\r\n\r\n\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <NotionBoard refetchCal={() => {\r\n              let calBoardApi = calBoardRef.current.getApi();\r\n              let notionCalBoard = calBoardApi.getEventSourceById('notion')\r\n              notionCalBoard.refetch();\r\n\r\n              let calCustomApi = calCustomRef.current.getApi();\r\n              let notionCalCustom = calCustomApi.getEventSourceById('notion')\r\n              notionCalCustom.refetch();\r\n            }} />\r\n          </Col>\r\n\r\n        </Row>\r\n      </Container>\r\n      {event && (event.subject||event.subject==\"\") &&\r\n        < NewEventModal\r\n          onClose={() => { setEvent(null); }}\r\n          onSave={async (we_title, we_desc, we_subject, we_start, we_end) => {\r\n            try {\r\n              const body = { we_title, we_desc, we_subject, we_start, we_end };\r\n              const response = fetch(`/api/notionLog/${event.id}`, {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken, \"user_id\": localStorage.user_id },\r\n                body: JSON.stringify(body)\r\n              });\r\n              const status = await response?.status;\r\n              if (status === 200) {\r\n                toast.success(\"Event successfully modified!\")\r\n              }\r\n              setEvent(null);\r\n            } catch (err) {\r\n              console.log(err.message);\r\n            }\r\n          }}\r\n\r\n          schedule={event}\r\n        />\r\n      }\r\n      {event && event.location &&\r\n        < NewEventModal\r\n          onClose={() => { setEvent(null); }}\r\n          onSave={async (ce_start, ce_end, ce_desc, ce_location) => {\r\n            try {\r\n              const body = { ce_start, ce_end, ce_desc, ce_location };\r\n              console.log(event);\r\n              const response = fetch(`/api/timetable/${event.id}`, {\r\n                method: \"PUT\",\r\n                headers: { \"Content-Type\": \"application/json\", \"jwt_token\": localStorage.token, \"rt_token\": localStorage.refreshToken, \"user_id\": localStorage.user_id },\r\n                body: JSON.stringify(body)\r\n              });\r\n              const status = await response?.status;\r\n              if (status === 200) {\r\n                toast.success(\"Class event successfully modified!\")\r\n              }\r\n              setEvent(null);\r\n            } catch (err) {\r\n              console.log(err.message);\r\n            }\r\n          }}\r\n\r\n          schedule={event}\r\n        />\r\n      }\r\n      <footer><i>Background vector created by <a href='https://www.freepik.com/vectors/background'>freepik</a></i></footer>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { ProtectedRoute } from './ProtectedRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { Calendar } from '../components/calendar/Calendar';\r\nimport { CalendarPage } from '../components/calendar/CalendarPage';\r\nimport { ChartPanel } from '../components/chart/ChartPanel';\r\nimport { RevisionList } from '../components/revision/RevisionList';\r\nimport { TaskList } from '../components/task/TaskList';\r\nimport { TimeLogList } from '../components/timelog/TimeLogList';\r\nimport { Login } from '../components/access/Login';\r\nimport { Register } from '../components/access/Register';\r\nimport { Dashboard } from '../components/dashboard/Dashboard';\r\nimport { toast } from \"react-toastify\";\r\n\r\ntoast.configure();\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const checkAuthenticated = async () => {\r\n        try {\r\n            const res = await fetch(\"/auth/jwt/verify\", {\r\n                method: \"POST\",\r\n                headers: { jwt_token: localStorage.token, rt_token: localStorage.refreshToken }\r\n            });\r\n            const success = res.ok;\r\n            return success;\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkAuthenticated()\r\n            .then(success => {\r\n                console.log(success);\r\n                setIsAuthenticated(success);\r\n                setIsLoading(false);\r\n            })\r\n    }, []);\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const setAuth = boolean => {\r\n        setIsAuthenticated(boolean);\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <Router>\r\n                <PublicRoute exact path=\"/login\" component={Login} isAuthenticated={isAuthenticated} isLoading={isLoading} setAuth={setAuth}/>\r\n                <PublicRoute exact path=\"/register\" component={Register} />\r\n                <ProtectedRoute exact path=\"/\" component={Dashboard} isAuthenticated={isAuthenticated} isLoading={isLoading} setAuth={setAuth}/>\r\n                <ProtectedRoute exact path=\"/calendar\" component={Calendar} isAuthenticated={isAuthenticated} isLoading={isLoading} setAuth={setAuth}/>\r\n                <ProtectedRoute exact path=\"/chart\" component={ChartPanel} isAuthenticated={isAuthenticated} isLoading={isLoading} setAuth={setAuth}/>\r\n                <ProtectedRoute exact path=\"/revision\" component={RevisionList} isAuthenticated={isAuthenticated} isLoading={isLoading} setAuth={setAuth}/>\r\n                <ProtectedRoute exact path=\"/task\" component={TaskList} isAuthenticated={isAuthenticated} isLoading={isLoading} setAuth={setAuth}/>\r\n                <ProtectedRoute exact path=\"/timelog\" component={TimeLogList} isAuthenticated={isAuthenticated} isLoading={isLoading} setAuth={setAuth}/>\r\n                {/* <ProtectedRoute component={Calendar} isAuthenticated={isAuthenticated} /> */}\r\n            </Router>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport {ToastContainer} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nexport const App=()=>(\r\n        <>\r\n        <AppRouter />\r\n        <ToastContainer autoClose={5000} theme=\"dark\"/>\r\n        </>\r\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootswatch/dist/vapor/bootstrap.css';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport \"../public/calendar.css\";\r\nimport \"../public/task.css\";\r\nimport \"../public/fullbackground.css\";\r\nimport \"../public/login.css\";\r\nimport \"../public/dashboard.css\";\r\n\r\nimport { App } from './App';\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    ReactDOM.render(<App />,  document.getElementById(\"root\"));\r\n})","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\r\\nhtml,\\r\\nbody{\\r\\n  background-attachment: fixed;\\r\\n}\\r\\n\\r\\nbody > div { /* the react root */\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n\\r\\n.fc { /* the calendar root */\\r\\n  max-width: 1200px;\\r\\n  max-height: 1200px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n\\r\\n/* Tooltip container */\\r\\n.tooltip {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */\\r\\n}\\r\\n\\r\\n/* Tooltip text */\\r\\n.tooltip .tooltiptext {\\r\\n  visibility: hidden;\\r\\n  width: 120px;\\r\\n  background-color: black;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  padding: 5px 0;\\r\\n  border-radius: 6px;\\r\\n \\r\\n  /* Position the tooltip text - see examples below! */\\r\\n  position: absolute;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/* Show the tooltip text when you mouse over the tooltip container */\\r\\n.tooltip:hover .tooltiptext {\\r\\n  visibility: visible;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./public/calendar.css\"],\"names\":[],\"mappings\":\";AACA;;EAEE,4BAA4B;AAC9B;;AAEA,aAAa,mBAAmB;EAC9B,SAAS;EACT,UAAU;AACZ;;;AAGA,MAAM,sBAAsB;EAC1B,iBAAiB;EACjB,kBAAkB;EAClB,cAAc;AAChB;;;AAGA,sBAAsB;AACtB;EACE,kBAAkB;EAClB,qBAAqB;EACrB,+BAA+B,EAAE,8CAA8C;AACjF;;AAEA,iBAAiB;AACjB;EACE,kBAAkB;EAClB,YAAY;EACZ,uBAAuB;EACvB,WAAW;EACX,kBAAkB;EAClB,cAAc;EACd,kBAAkB;;EAElB,oDAAoD;EACpD,kBAAkB;EAClB,UAAU;AACZ;;AAEA,oEAAoE;AACpE;EACE,mBAAmB;AACrB\",\"sourcesContent\":[\"\\r\\nhtml,\\r\\nbody{\\r\\n  background-attachment: fixed;\\r\\n}\\r\\n\\r\\nbody > div { /* the react root */\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n\\r\\n.fc { /* the calendar root */\\r\\n  max-width: 1200px;\\r\\n  max-height: 1200px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n\\r\\n/* Tooltip container */\\r\\n.tooltip {\\r\\n  position: relative;\\r\\n  display: inline-block;\\r\\n  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */\\r\\n}\\r\\n\\r\\n/* Tooltip text */\\r\\n.tooltip .tooltiptext {\\r\\n  visibility: hidden;\\r\\n  width: 120px;\\r\\n  background-color: black;\\r\\n  color: #fff;\\r\\n  text-align: center;\\r\\n  padding: 5px 0;\\r\\n  border-radius: 6px;\\r\\n \\r\\n  /* Position the tooltip text - see examples below! */\\r\\n  position: absolute;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/* Show the tooltip text when you mouse over the tooltip container */\\r\\n.tooltip:hover .tooltiptext {\\r\\n  visibility: visible;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body{\\r\\n\\tbackground-attachment: fixed !important;\\r\\n}\\r\\n\\r\\n.center {\\r\\n    right: 50%;\\r\\n    bottom: 50%;\\r\\n    transform: translate(50%,50%);\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.height-50 {\\r\\n    height:50vh;\\r\\n  }\\r\\n\\r\\n.height-100 {\\r\\n    height:100vh;\\r\\n}\\r\\n\\r\\nfooter {\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n   }\\r\\n\\r\\n  .react-bootstrap-table table {\\r\\n    border-collapse: collapse;\\r\\n    width: 100%\\r\\n  }\\r\\n  \\r\\n .react-bootstrap-table table tr {\\r\\n    border-bottom: 1px solid white;\\r\\n  }\\r\\n  \\r\\n .react-bootstrap-table table tr:last-child {\\r\\n    border: 0;\\r\\n  }\", \"\",{\"version\":3,\"sources\":[\"webpack://./public/dashboard.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,uCAAuC;AACxC;;AAEA;IACI,UAAU;IACV,WAAW;IACX,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,WAAW;EACb;;AAEF;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,SAAS;IACT,WAAW;GACZ;;EAED;IACE,yBAAyB;IACzB;EACF;;CAED;IACG,8BAA8B;EAChC;;CAED;IACG,SAAS;EACX\",\"sourcesContent\":[\"body{\\r\\n\\tbackground-attachment: fixed !important;\\r\\n}\\r\\n\\r\\n.center {\\r\\n    right: 50%;\\r\\n    bottom: 50%;\\r\\n    transform: translate(50%,50%);\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n.height-50 {\\r\\n    height:50vh;\\r\\n  }\\r\\n\\r\\n.height-100 {\\r\\n    height:100vh;\\r\\n}\\r\\n\\r\\nfooter {\\r\\n    position: relative;\\r\\n    text-align: center;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n   }\\r\\n\\r\\n  .react-bootstrap-table table {\\r\\n    border-collapse: collapse;\\r\\n    width: 100%\\r\\n  }\\r\\n  \\r\\n .react-bootstrap-table table tr {\\r\\n    border-bottom: 1px solid white;\\r\\n  }\\r\\n  \\r\\n .react-bootstrap-table table tr:last-child {\\r\\n    border: 0;\\r\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body{\\r\\n\\tbackground-attachment: fixed !important;\\r\\n\\tbackground-size: cover;\\r\\n}\\r\\n\\r\\n.full-height{\\r\\n\\theight: 100vh;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./public/fullbackground.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,uCAAuC;CACvC,sBAAsB;AACvB;;AAEA;CACC,aAAa;AACd\",\"sourcesContent\":[\"body{\\r\\n\\tbackground-attachment: fixed !important;\\r\\n\\tbackground-size: cover;\\r\\n}\\r\\n\\r\\n.full-height{\\r\\n\\theight: 100vh;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@media all and (min-width: 480px) {\\r\\n    .Login {\\r\\n      padding: 60px 0;\\r\\n    }\\r\\n  \\r\\n    .Login form {\\r\\n      margin: 0 auto;\\r\\n      max-width: 320px;\\r\\n    }\\r\\n  }\\r\\n  \", \"\",{\"version\":3,\"sources\":[\"webpack://./public/login.css\"],\"names\":[],\"mappings\":\"AAAA;IACI;MACE,eAAe;IACjB;;IAEA;MACE,cAAc;MACd,gBAAgB;IAClB;EACF\",\"sourcesContent\":[\"@media all and (min-width: 480px) {\\r\\n    .Login {\\r\\n      padding: 60px 0;\\r\\n    }\\r\\n  \\r\\n    .Login form {\\r\\n      margin: 0 auto;\\r\\n      max-width: 320px;\\r\\n    }\\r\\n  }\\r\\n  \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body{\\r\\n\\tbackground-attachment: fixed !important;\\r\\n}\\r\\n\\r\\n.float{\\r\\n\\tposition:fixed;\\r\\n\\twidth:60px;\\r\\n\\theight:60px;\\r\\n\\tbottom:40px;\\r\\n\\tright:40px;\\r\\n\\tbackground-color:#0C9;\\r\\n\\tcolor:#FFF;\\r\\n\\tborder-radius:50px;\\r\\n\\ttext-align:center;\\r\\n\\tbox-shadow: 2px 2px 3px #999;\\r\\n}\\r\\n\\r\\n.my-float{\\r\\n\\tmargin-top:22px;\\r\\n}\\r\\n\\r\\n.full-height{\\r\\n\\theight: 100vh;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./public/task.css\"],\"names\":[],\"mappings\":\"AAAA;CACC,uCAAuC;AACxC;;AAEA;CACC,cAAc;CACd,UAAU;CACV,WAAW;CACX,WAAW;CACX,UAAU;CACV,qBAAqB;CACrB,UAAU;CACV,kBAAkB;CAClB,iBAAiB;CACjB,4BAA4B;AAC7B;;AAEA;CACC,eAAe;AAChB;;AAEA;CACC,aAAa;AACd\",\"sourcesContent\":[\"body{\\r\\n\\tbackground-attachment: fixed !important;\\r\\n}\\r\\n\\r\\n.float{\\r\\n\\tposition:fixed;\\r\\n\\twidth:60px;\\r\\n\\theight:60px;\\r\\n\\tbottom:40px;\\r\\n\\tright:40px;\\r\\n\\tbackground-color:#0C9;\\r\\n\\tcolor:#FFF;\\r\\n\\tborder-radius:50px;\\r\\n\\ttext-align:center;\\r\\n\\tbox-shadow: 2px 2px 3px #999;\\r\\n}\\r\\n\\r\\n.my-float{\\r\\n\\tmargin-top:22px;\\r\\n}\\r\\n\\r\\n.full-height{\\r\\n\\theight: 100vh;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunklille\"] = self[\"webpackChunklille\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [101], () => (__webpack_require__(3615)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","useFetch","url","useState","task","setTask","useEffect","getTask","axios","headers","jwt_token","localStorage","token","rt_token","refreshToken","user_id","response","data","console","log","message","toast","NavBar","setAuth","handleLogout","e","preventDefault","removeItem","err","error","userName","Navbar","bg","variant","Container","href","Nav","className","Form","Button","onClick","ProtectedRoute","Component","component","isAuthenticated","isLoading","restOfProps","render","props","to","WelcomeBar","PublicRoute","DeleteConfirmationModal","onConfirm","onCancel","targetName","name","Modal","backdrop","show","id","NewEventModal","onSave","onClose","schedule","title","setName","subject","setSubject","location","setLocation","description","setDescription","del","setDel","start","end","range","setRange","setError","InputGroup","type","placeholder","value","onChange","target","rows","we_id","body","fetch","method","JSON","stringify","Date","getTime","getTimezoneOffset","Calendar","event","setEvent","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","googleCalendarPlugin","iCalendarPlugin","headerToolbar","left","center","right","initialView","buttonText","listYear","listMonth","listWeek","listDay","footerToolbar","nowIndicator","firstDay","selectable","selectMirror","eventClick","clickInfo","jsEvent","confirm","window","open","extendedProps","lecturer","_def","publicId","_instance","weekNumbers","weekNumberCalculation","calculateWeekNumber","googleCalendarApiKey","eventContent","renderEventContent","eventDidMount","info","String","generateTooltipTitle","Tooltip","el","placement","trigger","container","eventWillUnmount","tooltips","document","getElementsByClassName","length","parentNode","removeChild","eventSources","googleCalendarId","color","textColor","backgroundColor","format","beforeSend","xhr","i","setRequestHeader","extraParams","failure","alert","we_title","we_desc","we_subject","we_start","we_end","status","success","ce_start","ce_end","ce_desc","ce_location","date","currentTime","firstAcademicTime","eventInfo","view","timeText","course_code","course_type","OptionTheme","theme","borderRadius","colors","neutral0","neutral50","neutral80","neutral10","primary25","primary","typeOptions","label","BarChartForm","onSubmit","selectedTaskID","setSelectedTaskID","selectedType","setSelectedType","startDate","setStartDate","toISOString","split","endDate","setEndDate","taskOptions","map","tsk","push","tsk_id","tsk_name","icon","faChartBar","selected","class","isMulti","t","Object","values","size","colourSchemePinkBlue","BarChartGraph","selectedTimeLog","selectedTask","datasets","datas","sort","a","b","parseInt","tl_standby_mins","tl_real_mins","sortedTimeLog","tl_date","sortedDate","tl","labels","Set","tl_standby_min","tl_real_min","stack","display","text","scales","x","stacked","y","LineChartForm","selectedSubtaskID","setSelectedSubtaskID","subtaskOpt","setSubtaskOpt","subtaskOptions","find","subtask","st","st_id","st_name","faChartLine","ssid","so","LineChartGraph","selectedSubtask","st_ids","borderColor","ScatterChartForm","faChartArea","ScatterChartGraph","tl_dates","dataW","dataE","j","tooltip","callbacks","context","parsed","dataset","ticks","callback","stepSize","PieChartForm","setDate","faChartPie","PieChartGraph","chartRef","useRef","st_names","flat","subtasks","current","chart","destroy","legend","generateLabels","labelsOriginal","Chart","call","datasetColors","forEach","datasetIndex","index","hidden","isDatasetVisible","fillStyle","mouseEvent","legendItem","getDatasetMeta","update","labelIndex","dataIndex","subtaskName","join","replace","formattedValue","ref","redraw","BoxPlotForm","faGripLinesVertical","BoxPlotGraph","layout","d","marker","boxpoints","jitter","pointpos","paper_bgcolor","plot_bgcolor","font","yaxis","zeroline","boxmode","defaults","ChartPanel","barChart","setBarChart","lineChart","setLineChart","scatterChart","setScatterChart","pieChart","setPieChart","boxPlot","setBoxPlot","setSelectedTask","setSelectedSubtask","setSelectedTimeLog","filterTask","tsk_ids","filterTimeLog","filter","filterSubtask","undefined","lg","some","includes","toLocaleDateString","Row","Col","xs","Tabs","defaultActiveKey","onSelect","Tab","eventKey","ankiInvoke","action","version","params","Promise","resolve","reject","XMLHttpRequest","addEventListener","parse","responseText","getOwnPropertyNames","hasOwnProperty","result","send","NewRevisionModal","noteInfo","noteId","fields","Front","frontField","setFrontField","Back","backField","setBackField","tags","setTags","allTags","fetchTags","getTags","useTags","tagOptions","tag","onHide","as","note","RevisionList","createRevision","setCreateRevision","editRevision","setEditRevision","deleteRevision","setDeleteRevision","updateRevision","setUpdateRevision","revision","setRevision","dueRevision","setDueRevision","notes","setNotes","getCards","query","findCardsInReview","cards","deck","findCardsInLille","areDue","cardsInfo","dueCards","getNotes","findNotes","notesInfo","reviewCard","cardId","ease","modifyFormatter","cell","row","rowIndex","dueFormatter","expandRow","renderer","defaultSorted","dataField","order","dueRevisionColumns","formatter","allRevisionColumns","position","bottom","alwaysShowTitle","mainButtonStyles","style","faListAlt","keyField","columns","Alert","key","createNote","n","updateNote","updateTags","oldTags","removeNote","question","NewTaskModal","taskInfo","tsk_est_min","Math","trunc","hour","setHour","min","setMin","tsk_todo","setType","step","max","Number","NewSubTaskModal","subTaskInfo","TaskList","createTask","setCreateTask","createSubTask","setCreateSubTask","editTask","setEditTask","editSubTask","setEditSubTask","deleteTask","setDeleteTask","deleteSubTask","setDeleteSubTask","toggle","setToggle","getTimeLog","faTasks","faEye","Collapse","in","colSpan","setSubTaskInfo","NewTimeLogModal","timeLogInfo","taskID","setTaskID","standbyHour","setStandbyHour","standbyMin","setStandbyMin","realHour","setRealHour","realMin","setRealMin","TimeLogList","createLog","setCreateLog","editLog","setEditLog","deleteLog","setDeleteLog","setLog","faClock","l","tl_id","then","Login","user_email","user_password","remember_login","inputs","setInputs","onSubmitForm","json","parseRes","jwtToken","rtToken","setItem","controlId","Register","user_name","createPlugin","views","custom","segs","sliceEvents","ongoingEvent","setOngoingEvent","upcomingEvent","setUpcomingEvent","onTimer","setOnTimer","upTimer","setUpTimer","Audio","audio","playing","setPlaying","play","pause","removeEventListener","useAudio","school_ring","keepPlaying","timetableURL","backgroundImage","interval","setInterval","onEvents","def","allDay","upEvents","countdown","clearInterval","eve","floor","ConfirmationModal","NotionBoard","refetchCal","list","setList","setSchedule","setConfirm","getList","headerStyle","width","properties","Name","plain_text","Subject","select","faCheck","desc","new","rowStyle","Priority","priority","tabIndexCell","handleComplete","Dashboard","calBoardRef","calCustomRef","CustomViewPlugin","height","classList","remove","getApi","getEventSourceById","refetch","AppRouter","checkAuthenticated","res","ok","setIsAuthenticated","setIsLoading","boolean","exact","path","App","autoClose","ReactDOM","getElementById","___CSS_LOADER_EXPORT___","module","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","loaded","__webpack_modules__","m","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","keys","every","splice","r","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","obj","prop","prototype","Symbol","toStringTag","nmd","paths","children","p","baseURI","self","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}